 .EJ
;
;
;
 .BA $2000
 .OS
 .MC $C000
;
;
;
NULVECTOR .DE $00
USRVECTOR .DE $03
;
DISCI .DE $AC
DISCO .DE $AD
DISCC.VEC .DE $AE
DISC1 .DE $B0
DISC2 .DE $B2
DISCO.VEC .DE $B4
DISCI.VEC .DE $B6
;
SAVEM .DE $B9
ASSM.LNKNO .DE $BA
MAC.SUPPRS .DE $BB
MAC.EXPAND .DE $BC
MAC.SRCH .DE $BD
CALL.EXP .DE $BE
;
COND.SUP .DE $BF
SYMBOLIC .DE $C0
LST.EXP.OB .DE $C1
MAC.SEQ .DE $C2
FILE.SEQ .DE $C4
;
SAVEXX .DE $C6
SAVEYY .DE $C7
;
PURECL .DE $C8
PURECH .DE $C9
;
MG_FLAG .DE $CA
MG_ADDR .DE $CB
;
DELIM .DE $CD
SAVE .DE $CE
DC .DE $CF
PNTR .DE $D0
PROC_ADDRS .DE $D1
TPRES .DE $D3
SPRES .DE $D5
PC .DE $D7
REL .DE $D9
ERRORS .DE $DB
SCRAT0 .DE $DD
SCRAT1 .DE $DF
SCRAT2 .DE $E0
SCRAT3 .DE $E1
SCRAT4 .DE $E2
SUPPRESS.O .DE $E3
SAVEY .DE $E4
SAVEX .DE $E5
;
LN.2B.OUT .DE $E6
LN.INDEX .DE $E7
LIB.YM .DE $E8
LINE.LEN .DE $E9
AUTO.TAB .DE $EA
;
;
TXST .DE $100
TXEN .DE $102
STST .DE $104
STEN .DE $106
FIRST .DE $108
LAST .DE $10A
INCBY .DE $10C
MANU .DE $10E
FORMAT .DE $10F
FILE.NO .DE $110
HEX/DEC .DE $111
TERM .DE $112
PASS .DE $113
CON_TAPE .DE $114
AU .DE $115
OSTORE .DE $116
TLIST .DE $117
ADDRS .DE $118
ADDPAD .DE $11A
CUR.SAVE .DE $11C
EXT .DE $11E
PRINT/CTL .DE $11F
CRTEX .DE $18F
LINE_CNTR .DE $120
PAGE_NUMB .DE $121
REC_POINT .DE $122
LOAD/NO .DE $123
TSTART .DE $124
TEND .DE $126
HFILE/NO .DE $128
HSTART .DE $129
HEND .DE $12B
DELAY1 .DE $12D
DELAY2 .DE $12E
AS_LN_SV .DE $12F
EDIT/FINDC .DE $131
TABSN .DE $133
CRT .DE $135
;
TOP .DE $1FE
;
PIA.PAD .DE $1A80
PIA.PBD .DE $1A82
;
INCHAR.EXT .DE $12AE
PRCHAR.EXT .DE $0C80
HARD.EXT .DE $FFFF ;DUMMY
LOAD.EXT .DE $FFFF ;DUMMY
SAVE.EXT .DE $FFFF ;DUMMY
;
;
 .CT
 JMP COLDSTRT 
;
 JMP WARMSTRT 
;
 .SI DEFAULTS
 .SI HA.LAYOUT
 .SI EXIT0000
 .SI ERR.0
 .SI HA.LAYOUT1
;
COLDSTRT LDX #$FF 
 TXS  
 INX  
 STX *DISCI 
 STX *DISCO 
 STX PASS 
 STX *SUPPRESS.O 
 STX PRINT/CTL 
 LDA #$3A 
 NOP  
 JSR SET.BOUNDS 
 NOP  
 NOP  
 NOP  
 NOP  
 NOP  
 JSR INIT 
 LDA #1 
 STA LINE_CNTR 
 STA PAGE_NUMB 
 STA FORMAT 
 STA *ERRORS 
 STX INCBY 
 STX INCBY+1 
 STX MANU 
 LDY #MES.COLD-MES.ERROR
 JSR MESSAGE 
 LDA #11
 STA *AUTO.TAB 
@CLEAR JSR TXT.CLEAR 
 STX HFILE/NO 
 JSR PR.BOUNDS 
;
MONL.0.OFF JSR TD.0.OFF 
MONL.1.OFF JSR TD.1.OFF 
MON.LOOP LDX #0
MONLOOP1 CLD  
 NOP  
 NOP  
 NOP  
 LDA #0
 NOP  
 NOP  
 NOP  
 STA PASS 
 STA TABSN 
 JSR OUT.CR 
LN/COM LDX #$FF 
 STX TERM 
 STX HEX/DEC 
 TXS  
 INX  
 STX CON_TAPE 
 STX AU 
 JSR IN/TXT? 
 LDY #0
 JSR NXT.LETTER 
 CPY #80
 BCS LN/COM 
 JSR SRCH.COM 
 LDX #$ED 
 JMP ERR.0 ;ERROR IN COMMAND INPUT
;
TXT.CLEAR LDA TXST 
 STA *TPRES 
 LDA TXST+1 
 STA *TPRES+1 
TXT.END.0 TXA  
 LDY #2
 STA (TPRES),Y 
 RTS  
;
@BREAK LDA #$80 
 NOP  
 NOP  
 NOP  
 BRK  
 NOP  
 NOP  
WARMSTRT JSR PR.BOUNDS 
 JMP MON.LOOP 
;
@AUTO LDX #INCBY-TXST
 JSR GETDECPARM 
 JMP MONLOOP1 
;
@GET JSR GET 
 JMP MON.LOOP 
;
@FORMAT JSR GET.CRT.UP 
 STA FORMAT 
 CMP #'C 
 BNE FORM.SETD 
 STX FORMAT 
FORM.SETD JSR NXT.WORD 
 CPY #80
 BCS MONLOOP1.1 
 STX HEX/DEC 
 LDA #1
 STA PASS 
 JSR OPER/TST 
 INC *PROC_ADDRS 
 LDA *PROC_ADDRS 
 AND #%00011111
 STA *AUTO.TAB 
MONLOOP1.1 JMP MONLOOP1 
;
@MANUSCR JSR GET.CRT.UP 
 STA MANU 
 CMP #'C 
 BNE MONLOOP1.2 
 STX MANU 
MONLOOP1.2 JMP MONLOOP1 
;
@ASSMBLE STX CON_TAPE
 STX PASS 
 TYA  
 PHA  
 JSR SPRES:STST 
 JSR ST.END.0 
 STX HEX/DEC 
 PLA  
 TAY  
 STX TLIST 
 JSR GET.CRT.UP 
 CMP #'N 
 BEQ AS.LC 
 CMP #'L 
 BNE AS.GFRST 
 INC TLIST 
AS.LC JSR NXT.WORD 
AS.GFRST JSR IN.F/L 
 LDA FIRST 
 STA AS_LN_SV 
 LDA FIRST+1 
 STA AS_LN_SV+1 
 JMP ASSEMBLE 
;
@RUN LDA #1
 STX HEX/DEC 
 STA PASS 
 JSR OPER/TST 
 JSR NXT.WORD 
 JSR EX.RUN 
 JMP MONLOOP1 
;
EX.RUN JMP (PROC_ADDRS) 
;
@PRINT LDA CRT,Y 
 CMP #'/ 
 BNE LI.F/L 
 LDA #$FF 
 STA FIRST+1 
 JSR FIND.LNGE 
 LDA CUR.SAVE 
 STA *SCRAT0 
 LDA CUR.SAVE+1 
 STA *SCRAT0+1 
 JSR LI.LINE 
 JMP MONLOOP1 
;
LI.F/L JSR IN.F/L 
 JSR LI.>LAST? 
 JMP MONLOOP1 
;
PUT.RBUF LDA *PURECL 
 STA HSTART 
 CLC  
 ADC REC_POINT 
 STA HEND 
 LDA *PURECH 
 STA HSTART+1 
 ADC #0
 STA HEND+1 
 STX REC_POINT 
PUTIT JSR TD.0.ONW 
 STY *SAVE 
 JSR PUT.H/F 
 LDY *SAVE 
 JSR TD.0.OFW 
 RTS  
;
GET.FILNO STX FILE.NO 
 JSR GET.CRT.UP 
 CMP #'F 
 BNE RET.GFLN 
 INY  
 LDX #LAST-TXST
 JSR GETDECPARM 
 LDA LAST 
 STA FILE.NO 
 JSR NXT.LETTER 
RET.GFLN RTS  
;
LI.>LAST? BEQ LI.>LAST 
 BCC LI.LINE 
LI.LAST? LDY #2
LI.LAST?? DEY  
 BMI LI.LINE 
 LDA LAST,Y 
 CMP (SCRAT0),Y 
 BEQ LI.LAST?? 
 BCS LI.LINE 
LI.>LAST JSR LI.END 
 RTS  
;
LI.LINE JSR CRT:TXTLIN 
 LDA MANU 
 BNE LI.NOLNNR 
 JSR PR.SP/FRST 
 JSR OUT.2SP 
LI.NOLNNR JSR PR.CRT 
 JSR OUT.CR 
 JSR NXT.LIN/LA 
 LDY #2
 LDA (SCRAT0),Y 
 BNE LI.LAST? 
LI.END JSR CLR.SPR.// 
 JSR OUT.CR 
 RTS  
;
CLR.SPR.// STX *SUPPRESS.O 
 LDA #'/ 
 JSR OUTCHAR 
 LDA #'/ 
 JSR OUTCHAR 
 RTS  
;
IN.F/L LDX #FIRST-TXST
 JSR GETDECPARM 
 CPY #80
 BCC IN.LAST 
 LDA #$FF 
 STA LAST+1 
 BNE FIND.LNGE 
;
IN.LAST JSR NXT.LETTER 
 LDX #LAST-TXST
 JSR GETDECPARM 
FIND.LNGE JSR SR0:TXST 
FND.EOF? LDY #2
 LDA (SCRAT0),Y 
 BNE CMP.LNNR 
FND.LNGE CLC  
 RTS  
;
CMP.LNNR DEY  
 BMI FND.LNGE 
 LDA (SCRAT0),Y 
 CMP FIRST,Y 
 BEQ CMP.LNNR 
 BCC LNNRLESS 
 RTS  
;
LNNRLESS LDA *SCRAT0 
 STA CUR.SAVE 
 LDA *SCRAT0+1 
 STA CUR.SAVE+1 
 JSR NXT.LIN/LA 
 JMP FND.EOF? 
;
ST.IN.RBUF STY *SAVE 
 LDY REC_POINT 
 STA (PURECL),Y 
 INC REC_POINT 
 LDY *SAVE 
 RTS  
;
SE/I/LOW LDA PASS 
 BPL SE/I.NP2 
 LDA #$4F 
 INC HEX/DEC 
 JSR ST/PR.OB 
SE/I.NP2 JMP ST/PR.LOPR 
;
GETFRSTCH LDY #2
 LDA (SCRAT0),Y 
 RTS  
;
EX.PASS2 INC PASS 
 JMP AS.AUTO.P2 
;
IN/TXT? JSR IN.LINE 
 LDY #0
 LDA CRT,Y 
 CMP #'0 
 BCC IN.NOTXT 
 CMP #':
 BCC IN.TXTLINE 
IN.NOTXT RTS  
;
IN.TXTLINE LDX #FIRST-TXST
 JSR PARM 
 STY *SCRAT3 
 LDA ADDPAD 
 SEC  
 SBC *SCRAT3 
 STA ADDPAD 
SRCH.ENTRY JSR FI.LN/DEL 
 LDY *SCRAT3 
 JSR NXT.LETTER 
 CPY #80
 BCS AU? 
 LDY *SCRAT3 
 JSR INSRT.LN 
AU? JSR ADJ.AU 
 BEQ LN/COM.1 
 LDA FIRST 
 CLC  
 SED  
 ADC INCBY 
 STA FIRST 
 LDA FIRST+1 
 ADC INCBY+1 
 STA FIRST+1 
 CLD  
 JSR PR.FIRST 
 JSR IN.LINE 
 LDY #0
 STY *SCRAT3 
 JSR CMP.// 
 BNE SRCH.ENTRY 
 JSR OUT.CR 
LN/COM.1 JMP LN/COM 
;
CMP.// LDY #0
 JSR NXT.LETTER 
 LDA CRT,Y 
 CMP #'/ 
 BNE RET3 
 CMP CRT+1,Y 
RET3 RTS  
;
PARMDCML JSR PARM 
 CPY #80
 BCS RET4 
 LDA *SCRAT1 
 BEQ RET4 
ILLCHINDEC LDX #0
 JMP ERR.9 ;ILL CHAR IN DECIMAL STRING 
;
RET4 RTS  
;
GETDECPARM JSR PARMDCML 
 LDA #$20 
 CMP CRT,Y 
 BNE ILLCHINDEC 
 RTS  
;
ADJ.AU CLC  
 LDA INCBY 
 ADC INCBY+1 
 STA AU 
 RTS  
;
INSRT.LN TYA  
 PHA  
 JSR SR12:TPRES 
 LDA ADDPAD 
 SEC  
 ADC *TPRES 
 PHA  
 TXA  
 ADC *TPRES+1 
 CMP TXEN+1 
 BCC NEW.TPRES 
 BEQ TXT.OVFLW? 
TXT.OVFLW JMP ERR.F ;TEXT FILE OVERFLOW 
;
TXT.OVFLW? TAY  
 PLA  
 CMP TXEN 
 BCS TXT.OVFLW 
 PHA  
 TYA  
NEW.TPRES STA *TPRES+1 
 PLA  
 STA *TPRES 
 JSR SR34:TPRES 
 JMP MOVEDUP? 
;
MOVEUP JSR DEC.SCR12 
 JSR DEC.SCR34 
 LDA (SCRAT1,X) 
 STA (SCRAT3,X) 
MOVEDUP? LDA *SCRAT0 
 CMP *SCRAT1 
 BNE MOVEUP 
 LDA *SCRAT0+1 
 CMP *SCRAT2 
 BNE MOVEUP 
 LDY #0
 LDA FIRST 
 STA (SCRAT0),Y 
 LDA FIRST+1 
 INY  
 STA (SCRAT0),Y 
 PLA  
 TAX  
ADD.LINE INY  
 LDA CRT,X 
 INX  
 STA (SCRAT0),Y 
 CPY ADDPAD 
 BNE ADD.LINE 
 ORA #%10000000
 STA (SCRAT0),Y 
 LDX #0
 JSR TXT.END.0 
 RTS  
;
FI.LN/DEL JSR FIND.LNGE 
 BNE DELIFEQ 
RET.F RTS  
;
DELIFEQ BCS RET.F 
 JSR SR12:SR0 
 JSR NXT.LIN/LA 
MOVEDOWN LDY #2
 LDA (SCRAT0),Y 
 BNE MVD.LNNR 
 LDA *SCRAT1 
 STA *TPRES 
 LDA *SCRAT2 
 STA *TPRES+1 
 JSR TXT.END.0 
 JSR FIND.LNGE 
 RTS  
;
MVD.LNNR LDA (SCRAT0,X) 
 STA (SCRAT1,X) 
 JSR INC.SCR0 
 JSR INC.SCR12 
 DEY  
 BNE MVD.LNNR 
MVD.LINE LDA (SCRAT0,X) 
 STA (SCRAT1,X) 
 PHP  
 JSR INC.SCR0 
 JSR INC.SCR12 
 PLP  
 BPL MVD.LINE 
 BMI MOVEDOWN 
;
NXT.LIN/LA JSR INC.SCR0 
NXT.NOTFND JSR INC.SCR0 
 LDA (SCRAT0,X) 
 BPL NXT.NOTFND 
 JSR INC.SCR0 
 RTS  
;
CRT:TXTLIN JSR CLR.CRTBUF 
 LDA (SCRAT0),Y 
 STA FIRST 
 INY  
 LDA (SCRAT0),Y 
 STA FIRST+1 
 INY  
 LDA FORMAT 
 BEQ UNTILEOL 
 LDA (SCRAT0),Y 
 CMP #'; 
 BEQ UNTILEOL 
 CMP #$20 
 BEQ MNEM.FIELD 
 JSR ONEWORD 
MNEM.FIELD JSR TONXTWRD 
 LDX *AUTO.TAB 
 CMP #'; 
 BEQ UNTILEOL 
 JSR ONEWORD 
 JSR TONXTWRD 
 CMP #'; 
 BEQ COMM.FIELD 
 JSR ONEWORD 
 JSR TONXTWRD 
 CMP #'; 
 BNE UNTILEOL 
COMM.FIELD JSR X:NXTTAB 
UNTILEOL JSR ONEWORD 
 JMP UNTILEOL 
;
TONXTWRD LDA (SCRAT0),Y 
 INY  
 CMP #$20 
 BEQ TONXTWRD 
 DEY  
 RTS  
;
 .CT
X:NXTTAB INX  
 TXA  
 AND #7 
 BNE X:NXTTAB 
 RTS  
;
ONEWORD CPX #80
 BCS SAVEEOLY 
 LDA (SCRAT0),Y 
 BMI EOL/ABORT 
 CMP #$09 ;HT? 
 BEQ NXTTAB 
 STA CRT,X 
 INY  
 INX  
 CMP #$20 
 BNE ONEWORD 
 RTS  
;
EOL/ABORT AND #%01111111
 CMP #$09 ;HT? 
 BEQ SAVEEOLY 
 STA CRT,X 
SAVEEOLY TXA  
 TAY  
 LDX #0
 PLA  
 PLA  
 RTS  
;
NXTTAB JSR X:NXTTAB 
 INY  
 BNE ONEWORD 
;
 INX  
ERR.17 INX  
ERR.16 INX  
ERR.15 INX  
 INX  
 INX  
ERR.12 INX  
ERR.11 INX  
ERR.10 INX  
ERR.F INX  
ERR.E INX  
ERR.D INX  
ERR.C INX  
ERR.B INX  
ERR.A INX  
ERR.9 INX  
ERR.8 INX  
ERR.7 INX  
ERR.6 INX  
ERR.5 INX  
ERR.4 INX  
ERR.3 INX  
ERR.2 INX  
ERR.1 INX  
ERR.0 TXA  
 PHA  
 LDX #0
 JSR INC.ERRORS 
 LDA PASS 
 BPL PR.ERRMSG 
 STA TERM 
PR.ERRMSG LDA *SUPPRESS.O 
 STA *DC 
 STX *SUPPRESS.O 
 LDA #$07 ;BEL 
 JSR OUTCHAR 
 JSR PR.ASLN/ER 
 JSR OUT.CR 
 LDA #'! 
 JSR OUTCHAR 
 PLA  
 JSR OUT.BYTE 
 TYA  
 PHA  
 LDY #MES.ERROR-MES.ERROR
 JSR MESSAGE 
 PLA  
 TAY  
 JSR PR.SP/FRST 
 LDA #'/ 
 JSR OUTCHAR 
 LDA HFILE/NO 
 JSR OUT.BYTE 
 JSR OUT.CR 
 LDA TERM 
 BNE TERMINATE 
 LDA *DC 
 STA *SUPPRESS.O 
 RTS  
;
TERMINATE LDA #0-1
 STA *ERRORS 
 JMP MONL.0.OFF 
;
SR12:SR0 LDA *SCRAT0 
 STA *SCRAT1 
 LDA *SCRAT0+1 
 STA *SCRAT2 
 RTS  
;
SR12:TPRES LDA *TPRES 
 STA *SCRAT1 
 LDA *TPRES+1 
 STA *SCRAT2 
 RTS  
;
SR34:TPRES LDA *TPRES 
 STA *SCRAT3 
 LDA *TPRES+1 
 STA *SCRAT4 
 RTS  
;
SR0:TXST LDA TXST 
 STA *SCRAT0 
 LDA TXST+1 
 STA *SCRAT0+1 
 RTS  
;
SR0:STST LDA STST 
 STA *SCRAT0 
 LDA STST+1 
 STA *SCRAT0+1 
 RTS  
;
INC.SCR34 INX  
INC.SCR12 INX  
INC.SCR0 INX  
 INX  
INC.REL INX  
INC.PC INX  
INC.SPRES INX  
 TXA  
 ASL A 
 TAX  
 INC *TPRES,X 
 BNE INC.OK 
 INC *TPRES+1,X 
INC.OK LDX #0
 RTS  
;
DEC.SCR34 INX  
DEC.SCR12 INX  
 INX  
 INX  
DEC.REL INX  
 INX  
 INX  
 TXA  
 ASL A 
 TAX  
DEC.TPRES DEC *TPRES,X 
 LDA *TPRES,X 
 CMP #0-1
 BNE DEC.OK 
 DEC *TPRES+1,X 
DEC.OK LDX #0
 RTS  
;
NXT.W/SK LDA CRT,Y 
 CMP #'! 
 BEQ SKIP.3 
 BNE NXT.WORD 
COMP.. LDA CRT,Y 
 CMP #'. 
 BNE NXT.WORD 
SKIP.3 INY  
 INY  
 INY  
NXT.WORD JSR NXT.SPACE 
NXT.LETTER LDA CRT,Y 
 INY  
 CPY #80
 BCS RET1 
 CMP #$20 
 BEQ NXT.LETTER 
 DEY  
RET1 RTS  
;
NXT.SPACE LDA CRT,Y 
 INY  
 CPY #80
 BCS RET2 
 CMP #$20 
 BNE NXT.SPACE 
 DEY  
RET2 RTS  
;
MESSAGE LDA MES.ERROR,Y 
 BNE MESS.DO 
 RTS  
;
MESS.DO JSR OUTCHAR 
 INY  
 BNE MESSAGE 
;
MES.ERROR .BY ' AT LINE' $00
MES.LABS .BY $0D $0A $0A $0A 'LABEL FILE:  '
 .BY '[ / = EXTERNAL ]'
 .BY $0D $0A $0A $00
MES.PASS2 .BY 'READY FOR PASS 2'
 .BY $0D $0A $00
MES.PAGE .BY 'PAGE ' $00
MES.COLD .BY $0D $0A 'C 1979 BY C. MOSER'
 .BY $0D $0A $0D $0A $00
;
PR.CRT LDX #0
PR.CRT.NXT TXA  
 PHA  
 LDA CRT,X 
 JSR OUTCHAR 
 PLA  
PR.Y.CRT.A TAX  
 INX  
 DEY  
 BPL PR.CRT.NXT 
 LDX #0
 RTS  
;
IN.LINE STX *SUPPRESS.O 
PROMPT LDA #'> 
 JSR OUTCHAR 
 JSR CLR.CRTBUF 
IN.CHA.LNE JSR IN/SAVXY 
 CMP #$0D ;CR 
 BNE TST.BS 
GOT.A.LINE INY  
 STY ADDPAD 
 RTS  
;
CURS.BACK JSR OUTCHAR 
TST.BS CMP #$08 ;BS? 
 BEQ CRT.BACK 
 CMP #$7F ;DEL? 
 BNE TST.LINDEL 
 LDA #'\ 
 JSR OUTCHAR 
CRT.BACK DEY  
 BMI LINE.AGN 
 LDA #$20 
 STA CRT,Y 
 JMP IN.CHA.LNE 
;
LINE.AGN JSR OUT.CR 
 LDA AU 
 BEQ IN.LINE 
 JSR PR.FIRST 
 JMP PROMPT 
;
TST.LINDEL CMP #$18 ;CAN? (^X) 
 BEQ LINE.AGN 
 STA CRT,Y 
 CMP #$09 ;HT? 
 BEQ PR.TAB 
 INY  
TST.LNOVFL CPY #80
 BCC IN.CHA.LNE 
 LDA #$07 ;BEL 
 JSR OUTCHAR 
 LDA #$08 ;BS 
 BNE CURS.BACK 
 BEQ PR.Y.CRT.A 
PR.TAB TYA  
 PHA  
PR.TABSP JSR OUT.SP 
 INY  
 TYA  
 AND #%00000111
 BNE PR.TABSP 
 PLA  
 TAY  
 INY  
 JMP TST.LNOVFL 
;
CLR.CRTBUF LDY #85
 LDA #$20 
CLR.CRT.DO STA CRT,Y 
 DEY  
 BPL CLR.CRT.DO 
 INY  
 RTS  
;
PR.SP/FRST JSR OUT.SP 
PR.FIRST LDA FIRST+1 
 JSR OUT.BYTE 
 LDA FIRST 
 JSR OUT.BYTE 
 RTS  
;
PARM LDA #0
 STA TXST,X 
 STA TXST+1,X 
 STA *SCRAT1 
 STA *SCRAT2 
PARM.GET JSR GET.CRT.HX 
 BNE PARM.NITST 
 LDX #0
 RTS  
;
PARM.NITST PHA  
 LDA *SCRAT1 
 BEQ PARM.NIBOK 
 LDA HEX/DEC 
 BEQ PARM.NIBOK 
 LDX #0
 PLA  
 RTS  
;
PARM.NIBOK INY  
 TYA  
 PHA  
 LDY #4
PARM.NIBIN ASL TXST,X 
 ROL TXST+1,X 
 DEY  
 BNE PARM.NIBIN 
 PLA  
 TAY  
 PLA  
 ORA TXST,X 
 STA TXST,X 
 JMP PARM.GET 
;
GET.CRT.HX JSR GET.CRT.UP 
 CMP #'0 
 BCC NOTHEX 
 CMP #': 
 BCC NUMHEX 
 CMP #'A 
 BCC NOTHEX 
 CMP #'G 
 BCS NOTHEX 
 AND #%00001111
 CLC  
 ADC #9
 INC *SCRAT1 
NUMHEX AND #%00001111
 INC *SCRAT2 
 RTS  
;
NOTHEX LDA #0
 RTS  
;
GET.CRT.UP LDA CRT,Y 
UPPERCASE CMP #'a 
 BCC NOTLOWER 
 CMP #'{ 
 BCS NOTLOWER 
 AND #%11011111
NOTLOWER RTS  
;
SRCH.COM LDA #0
 BEQ STRT.SRCH 
SRCH.MNEM LDA #1
 BNE STRT.SRCH 
SRCH.MODS LDA #0-1
STRT.SRCH STA *SCRAT3 
 STY *SCRAT4 
CONT.SRCH LDY *SCRAT4 
CMP.NXT LDA *SCRAT3 
 BEQ CMP.COM 
 BPL CMP.MODS 
 LDA MNEM.MODS,X 
 BNE COMPARE 
 RTS  
;
CMP.MODS LDA MNEM.TABLE,X 
 BNE COMPARE 
 RTS  
;
CMP.COM LDA COM.TABLE,X 
 BNE COMPARE 
 RTS  
;
COMPARE STA ADDPAD 
 JSR GET.CRT.UP 
 CMP ADDPAD 
 PHP  
 TYA  
 SEC  
 SBC *SCRAT4 
 INY  
 INX  
 PLP  
 BEQ MATCH.2/3? 
 CMP #1
 BEQ FALSE.2ND 
 CMP #2
 BEQ FALSE.3TH 
 INX  
FALSE.2ND INX  
FALSE.3TH INX  
 LDA *SCRAT3 
 BMI SKIP.OPS 
 BNE CONT.SRCH 
 JMP CONT.SRCH 
;
SKIP.OPS LDA MNEM.MODS-1,X 
 AND #%00001111
 STX *SCRAT2 
 SEC  
 ADC *SCRAT2 
 TAX  
 JMP CONT.SRCH 
;
MATCH.2/3? PHA  
 LDA *SCRAT3 
 BNE MATCH.3? 
 PLA  
 CMP #1
 BNE CMP.NXT 
 BEQ MATCH.OK 
MATCH.3? PLA  
 CMP #2
 BNE CMP.NXT 
MATCH.OK LDA *SCRAT3 
 BEQ X.PSEU/COM 
 STX *PNTR 
 RTS  
;
X.PSEU/COM LDA COM.TABLE,X 
 STA *SCRAT3 
 LDA COM.TABLE+1,X 
 STA *SCRAT4 
 PLA  
 PLA  
 CPX #PSEU.TABLE-COM.TABLE
 BCS EX.PSEU 
 JSR NXT.WORD 
 JMP EX.COM 
;
EX.PSEU JSR NXT.LETTER 
EX.COM LDX #0
 JMP (SCRAT3) 
;
 .CT
;
COM.TABLE  .BY 'BR'
 .SI @BREAK
 .BY 'CL'
 .SI @CLEAR
 .BY 'PU'
 .SI @PUT
 .BY 'FO'
 .SI @FORMAT
 .BY 'PR'
 .SI @PRINT
 .BY 'AU'
 .SI @AUTO
 .BY 'AS'
 .SI @ASSMBLE
 .BY 'PA'
 .SI @PASS
 .BY 'RU'
 .SI @RUN
 .BY 'MA'
 .SI @MANUSCR
 .BY 'OU'
 .SI @OUTPUT
 .BY 'ON'
 .SI @ON
 .BY 'OF'
 .SI @OFF
 .BY 'HA'
 .SI @HARD
 .BY 'GE'
 .SI @GET
 .BY 'LA'
 .SI @LABELS
 .BY 'ED'
 .SI @EDIT
 .BY 'NU'
 .SI @NUMBER
 .BY 'DE'
 .SI @DELETE
 .BY 'FI'
 .SI @FIND
 .BY 'MO'
 .SI @MOVE
 .BY 'CO'
 .SI @COPY
 .BY 'SE'
 .SI @SET
 .BY 'US'
 .SI USRVECTOR
 .BY 'DU'
 .SI @DUPLCT
 .BY 'EN'
 .SI @ENTER
 .BY 'LO'
 .SI @LOOKUP
 .BY 'DC'
 .SI @DISCCOM
;
 .BY $00 $00 $00 $00 $00
 .BY $00 $00 $00 $00 $00
 .BY $00
;
BRA<<? BNE BRA<< 
 PLA  
 JMP BRA<? 
;
BRA<< PLA  
 JMP RANGE.ER 
;
PSEU.TABLE .BY 'SI'
 .SI @.SI
 .BY 'BA'
 .SI @.BA
 .BY 'EN'
 .SI @.EN
 .BY 'BY'
 .SI @.BY
 .BY 'SE'
 .SI @.SE
 .BY 'DI'
 .SI @.DI
 .BY 'LS'
 .SI @.LS
 .BY 'LC'
 .SI @.LC
 .BY 'MC'
 .SI @.MC
 .BY 'OC'
 .SI @.OC
 .BY 'OS'
 .SI @.OS
 .BY 'CE'
 .SI @.CE
 .BY 'CT'
 .SI @.CT
 .BY 'RS'
 .SI @.RS
 .BY 'DE'
 .SI @.DE
 .BY 'RC'
 .SI @.RC
 .BY 'DS'
 .SI @.DS
 .BY 'ES'
 .SI @.ES
 .BY 'EC'
 .SI @.EC
 .BY 'EJ'
 .SI @.EJ
 .BY 'MD'
 .SI @.MD
 .BY 'ME'
 .SI @.ME
 .BY 'MG'
 .SI @.MG
;
 .BY $00 $00 $00 $00 $00
 .BY $00 $00 $00 $00 $00
 .BY $00 $00 $00 $00 $00
 .BY $00 $00 $00 $00 $00
 .BY $00
;
;
MOD.ACCU .BY 'A '
 .SI ACCU
 .BY $00
;
MOD.IND .BY ') '
 .SI IND.ABS
 .BY $00
;
MNEM.TABLE .BY 'TAX' $AA
 .BY 'TAY' $A8
 .BY 'TSX' $BA
 .BY 'TXA' $8A
 .BY 'TXS' $9A
 .BY 'TYA' $98
 .BY 'CLC' $18
 .BY 'CLD' $D8
 .BY 'CLI' $58
 .BY 'CLV' $B8
 .BY 'SEC' $38
 .BY 'SED' $F8
 .BY 'SEI' $78
 .BY 'NOP' $EA
 .BY 'RTI' $40
 .BY 'RTS' $60
 .BY 'DEX' $CA
 .BY 'DEY' $88
 .BY 'INX' $E8
 .BY 'INY' $C8
 .BY 'PHA' $48
 .BY 'PHP' $08
 .BY 'PLA' $68
 .BY 'PLP' $28
 .BY 'BRK' $00
;
 .BY $00
;
MNEM.BRA .BY 'BCC' $90
 .BY 'BCS' $B0
 .BY 'BEQ' $F0
 .BY 'BMI' $30
 .BY 'BNE' $D0
 .BY 'BPL' $10
 .BY 'BVC' $50
 .BY 'BVS' $70
;
 .BY $00
;
MNEM.MODS .BY 'ROR' %11000000+5 %11000001
 .BY $6E $7E $66 $76 $6A
;
 .BY 'ADC' %11100000+8 %11011010
 .BY $6D $7D $79 $65 $75 $71 $61 $69
;
 .BY 'AND' %11100000+8 %11011010
 .BY $2D $3D $39 $25 $35 $31 $21 $29
;
 .BY 'ASL' %11000000+5 %11000001
 .BY $0E $1E $06 $16 $0A
;
 .BY 'BIT' %10000000+2 %10000000
 .BY $2C $24
;
 .BY 'CMP' %11100000+8 %11011010
 .BY $CD $DD $D9 $C5 $D5 $D1 $C1 $C9
;
 .BY 'CPX' %10000000+3 %10000010
 .BY $EC $E4 $E0
;
 .BY 'CPY' %10000000+3 %10000010
 .BY $CC $C4 $C0
;
 .BY 'DEC' %11000000+4 %11000000
 .BY $CE $DE $C6 $D6
;
 .BY 'EOR' %11100000+8 %11011010
 .BY $4D $5D $59 $45 $55 $51 $41 $49
;
 .BY 'INC' %11000000+4 %11000000
 .BY $EE $FE $E6 $F6
;
 .BY 'JMP' %10010000+2 %00000000
 .BY $4C $6C
;
 .BY 'LDA' %11100000+8 %11011010
 .BY $AD $BD $B9 $A5 $B5 $B1 $A1 $A9
;
 .BY 'LDX' %10100000+5 %10100010
 .BY $AE $BE $A6 $B6 $A2
;
 .BY 'LDY' %11000000+5 %11000010
 .BY $AC $BC $A4 $B4 $A0
;
 .BY 'LSR' %11000000+4 %11000001
 .BY $4E $5E $46 $56
;
 .BY 'JSR' %10000000+1 %00000000
 .BY $20
;
 .BY 'ORA' %11100000+8 %11011010
 .BY $0D $1D $19 $05 $15 $11 $01 $09
;
 .BY 'ROL' %11000000+5 %11000001
 .BY $2E $3E $26 $36 $2A
;
 .BY 'SBC' %11100000+8 %11011010
 .BY $ED $FD $F9 $E5 $F5 $F1 $E1 $E9
;
 .BY 'STA' %11100000+7 %11011000
 .BY $8D $9D $99 $85 $95 $91 $81
;
 .BY 'STX' %10000000+3 %10100000
 .BY $8E $86 $96
;
 .BY 'STY' %10000000+3 %11000000
 .BY $8C $84 $94
;
 .BY $00
;
 .CT
@.MG INC *MG_FLAG 
 JMP AS.GOON 
;
@.DS LDA TLIST 
 BEQ BLOCKSIZE? 
 LDA PASS 
 CMP #1
 BNE BLOCKSIZE? 
 LDA *MAC.EXPAND 
 BNE BLOCKSIZE? 
 JSR PR.PC/_ 
 LDA #5
 STA *LN.INDEX 
BLOCKSIZE? JSR OPER/TST 
 LDA ADDPAD 
 BEQ EX.DS 
 STY TERM 
 JMP ERR.4 ;OPERAND UNDEFINED 
;
EX.DS LDA *PROC_ADDRS 
 CLC  
 ADC *PC 
 STA *PC 
 LDA *PROC_ADDRS+1 
 ADC *PC+1 
 STA *PC+1 
 LDA *PROC_ADDRS 
 CLC  
 ADC *REL 
 STA *REL 
 LDA *PROC_ADDRS+1 
 ADC *REL+1 
 STA *REL+1 
 LDA PASS 
 BPL AS.GOON.1 
 LDA #$7F 
 INC HEX/DEC 
 JSR ST/PR.OB 
 LDA *PROC_ADDRS 
 INC HEX/DEC 
 JSR ST/PR.OB 
 LDA *PROC_ADDRS+1 
 INC HEX/DEC 
 JSR ST/PR.OB 
AS.GOON.1 JMP AS.GOON 
;
@.EJ LDA PASS 
 BEQ AS.GOON.2 
 BMI AS.GOON.2 
 LDA TLIST 
 BEQ AS.GOON.2 
 LDA PRINT/CTL 
 BEQ AS.GOON.2 
 JSR HA.PAGE 
AS.GOON.2 JMP AS.GOON 
;
@.RS LDA #$5F 
 JMP P3?>RDIR 
;
@.CE STX TERM 
 BEQ AS.GOON.3 
;
@.OS STY OSTORE 
 BEQ AS.GOON.3 
;
@.OC STX OSTORE 
 BEQ AS.GOON.3 
;
@.CT STY CON_TAPE 
 BEQ AS.GOON.3 
;
@.LS STY TLIST 
 BEQ AS.GOON.3 
;
@.LC STX TLIST 
AS.GOON.3 JMP AS.GOON 
;
@.SI JSR OPER/TST 
 INC EXT 
 JMP SE/I/LOW 
;
@.SE JSR OPER/TST 
 LDX #0
 STX EXT 
 JMP SE/I/LOW 
;
@.BA LDA *SCRAT0 
 PHA  
 LDA *SCRAT0+1 
 PHA  
 JSR OPER/TST 
 LDA ADDPAD 
 BEQ EX.BA 
 STY TERM 
 JMP ERR.4 ;.BA OPERAND UNDEFINED 
;
EX.BA PLA  
 STA *SCRAT0+1 
 PLA  
 STA *SCRAT0 
 LDA *PROC_ADDRS 
 STA *PC 
 STA *REL 
 LDA *PROC_ADDRS+1 
 STA *PC+1 
 STA *REL+1 
 LDA CRT 
 CMP #$20 
 BEQ BA.P3? 
 LDA PASS 
 BNE BA.P3? 
 JSR CHNGEVALUE 
BA.P3? LDA PASS 
 BPL AS.GOON.4 
 JSR PUT.RBUF/R 
AS.GOON.4 JMP AS.GOON 
;
@.MC LDA TERM 
 PHA  
 STY TERM 
 JSR OPER/TST 
 PLA  
 STA TERM 
 LDA *PROC_ADDRS 
 STA *REL 
 LDA *PROC_ADDRS+1 
 STA *REL+1 
 JMP AS.GOON 
;
BY.OPER JSR OPER/TST 
 LDA *PROC_ADDRS 
 JSR BY.STORE 
BY.DONE? JSR NXT.LETTER 
 CPY #80
 BCS AS.GOON.4 
 BCC BY.OPRS? 
;
@.BY CPY #80
 BCC BY.OPRS? 
OP.ER JSR ERR.A ;NO OPERAND 
 JMP AS.GOON 
;
BY.OPRS? CMP #'; 
 BEQ AS.GOON.4 
 CMP #$27 ;' 
 BNE BY.OPER 
BY.STRING INY  
 CPY #80
 BCS OP.ER 
 LDA CRT,Y 
 CMP #$27 ;' 
 BNE BY.NXTCH 
 INY  
 BNE BY.DONE? 
;
BY.NXTCH JSR BY.STORE 
 CLV  
 BVC BY.STRING 
;
BY.STORE PHA  
 LDA PASS 
 BPL BY.STDAT 
 LDA #$3F 
 INC HEX/DEC 
 JSR ST/PR.OB 
BY.STDAT PLA  
 JSR ST/PR.OB 
 RTS  
;
@.DI JSR DEF.LAB? 
 JSR CHNGEVALUE 
 JMP AS.GOON 
;
@.DE JSR DEF.LAB? 
 BNE EXT.MARKED 
 LDY #1
MARK.EXT INY  
 LDA (SAVE),Y 
 BPL MARK.EXT 
INSERT_/ LDA (SAVE),Y 
 INY  
 STA (SAVE),Y 
 DEY  
 DEY  
 CPY #1
 BNE INSERT_/ 
 INY  
 LDA #$2F 
 STA (SAVE),Y 
 JSR INC.SPRES 
 JSR ST.END.0 
EXT.MARKED JSR CHNGEVALUE 
 JMP AS.GOON 
;
DEF.LAB? JSR OPER/TST 
 LDA CRT 
 CMP #$20 
 BNE LAB.WHERE? 
 JSR ERR.5 ;LABEL MISSING 
 JMP AS.GOON 
;
LAB.WHERE? LDY #0
 JSR EV.LABEX 
 LDA *SCRAT0 
 STA *SAVE 
 LDA *SCRAT0+1 
 STA *SAVE+1
 LDA PASS 
 BEQ RET.ZIFP1 
 STX EXT 
 LDA #0-1
RET.ZIFP1 RTS  
;
CHNGEVALUE LDY #0
 LDA *PROC_ADDRS 
 STA (SAVE),Y 
 INY  
 LDA *PROC_ADDRS+1 
 STA (SAVE),Y 
 RTS  
;
@.EN JSR PR.ASLIN 
 LDA *MAC.EXPAND 
 BNE MACEXP.EN 
 LDA *COND.SUP 
 BNE CONSUP.EN 
 LDA *MAC.SUPPRS 
 BNE MACDEF.EN 
 BEQ EX.EN 
;
MACEXP.EN LDX #$21 
 BNE ERR0.1 ;MACRO IN EXP STATE AT .EN 
;
CONSUP.EN LDX #$22 
 BNE ERR0.1 ;COND SUPPR AT .EN 
;
MACDEF.EN LDX #$23 
ERR0.1 JSR ERR.0 ;MACRO DEF INCOMPLETE AT .EN 
EX.EN LDA PASS 
 BEQ STRT.PASS2 
 BMI EN.PASS3 
 LDA TLIST 
 JMP EN.PASS2 
;
EN.PASS3 JSR PUT.RBUF/R 
 JMP MONL.0.OFF 
;
STRT.PASS2 INC PASS 
 LDA CON_TAPE 
 BEQ AS.AUTO.P2 
 JSR TD.0.OFW 
 LDY #MES.PASS2-MES.ERROR
 JSR MESSAGE 
 JMP MONL.0.OFF 
;
@OUTPUT STX REC_POINT 
 JSR GET.FILNO 
 STX HEX/DEC 
 LDX #0-1
 STX PASS 
 STX LAST 
AS.AUTO.P2 LDA AS_LN_SV 
 STA FIRST 
 LDA AS_LN_SV+1 
 STA FIRST+1 
 JSR FIND.LNGE 
ASSEMBLE LDX #0
 STX *LN.2B.OUT 
 STX *ERRORS+1 
 STX *ERRORS 
 LDX #$FF 
 TXS  
 INX  
 STX OSTORE 
 STX *MG_FLAG 
 LDA TXST 
 STA *MG_ADDR 
 LDA TXST+1 
 STA *MG_ADDR+1 
 LDA #1
 STA *FILE.SEQ 
 STX *FILE.SEQ+1 
 STX *MAC.SEQ 
 STX *MAC.SEQ+1 
 STX *MAC.SUPPRS 
 STX *MAC.EXPAND 
 STX *COND.SUP 
 STX *LST.EXP.OB 
 LDA #$00 ;DEFAULT L,.BA ADDR
 STA *PC 
 STA *REL 
 LDA #$02 ;DEFAULT H,.BA ADDR 
 STA *PC+1 
 STA *REL+1 
 LDA PASS 
 BPL AS.NEW 
 JSR RESET.RBUF 
 JMP AS.NEW 
;
AS.GOON LDX #0
 PLA  
 STA *SCRAT0 
 PLA  
 STA *SCRAT0+1 
 JSR NXT.LIN/LA 
AS.NEW LDA *SCRAT0+1 
 PHA  
 LDA *SCRAT0 
 PHA  
 STX EXT 
 JSR GETFRSTCH 
 BNE AS.LINE 
 LDA *MAC.SUPPRS 
 BEQ INC.FILSEQ 
 LDX #$27 
 JSR ERR.0 ;MACRO DEF OVERLAPS FILE-BOUND 
INC.FILSEQ INC *FILE.SEQ 
 BNE TST.CTAPE 
 INC *FILE.SEQ+1 
 BNE TST.CTAPE 
FILSQOVFLW LDX #$2F 
 JSR ERR.0 ;OVRFLW IN FILE SEQ COUNT 
TST.CTAPE LDA CON_TAPE 
 BNE NXT.FILE 
 LDA #1
 STA TERM 
 JMP ERR.7 ;.EN MISSING 
;
NXT.FILE JSR PR.ASLIN 
 JSR OUT.CR 
 JSR OUT.CR 
 JSR OUT.CR 
 LDA *MG_FLAG 
 BEQ NO.MG 
 LDA *TPRES 
 STA *MG_ADDR 
 LDA *TPRES+1 
 STA *MG_ADDR+1 
NO.MG LDA #0
 STA *MG_FLAG 
 LDA *MG_ADDR 
 STA *TPRES 
 LDA *MG_ADDR+1 
 STA *TPRES+1 
 STX FILE.NO 
 JSR G.SA 
 LDA #0
 STA HEX/DEC 
 LDA AS_LN_SV 
 STA FIRST 
 LDA AS_LN_SV+1 
 STA FIRST+1 
 LDA *MG_ADDR 
 STA *SCRAT0 
 LDA *MG_ADDR+1 
 STA *SCRAT0+1 
 LDX #$FF 
 TXS  
 INX  
 JMP AS.NEW 
;
AS.LINE LDX #0
 LDA TLIST 
 BEQ TERM.NTYET 
 JSR PR.ASLIN 
 LDA PASS 
 CMP #1
 BNE TERM.NTYET 
 LDA *MAC.EXPAND 
 BEQ TERM.LLINE 
 LDA *LST.EXP.OB 
 BEQ TERM.NTYET 
TERM.LLINE JSR OUT.CR 
TERM.NTYET JSR CRT:TXTLIN 
 STY *LINE.LEN 
 INC *LN.2B.OUT 
 LDY #0
 LDA CRT,Y 
 CMP #'; 
 BEQ MACRINP? 
 JSR NXT.WORD 
MACRINP? STX *MAC.SRCH 
 LDA *MAC.SUPPRS 
 BEQ AS.SUPR? 
 LDX #AT.MEMDEN-AT.COND
 JSR SRCH.AT 
 JMP AS.GOON 
;
AS.SUPR? LDA *COND.SUP 
 BEQ CMNTONLY? 
 LDX #AT.STARS-AT.COND
 JSR SRCH.AT 
 JMP AS.GOON 
;
CMNTONLY? LDY #0
 LDA CRT,Y 
 CMP #'; 
 BNE NEWLAB? 
AS.GOON.5 JMP AS.GOON 
;
NEWLAB? CMP #$20 
 BEQ NONEWLAB 
 LDA PASS 
 BNE NONEWLAB 
 JSR NEWLABEL 
NONEWLAB JSR NXT.W/SK 
 LDA CRT,Y 
 CMP #'; 
 BEQ AS.GOON.5 
 CPY #80
 BCS AS.GOON.5 
 CMP #'.
 BNE MNEM? 
 INY  
 LDA CRT+2,Y 
 CMP #$20 
 BEQ FI/EX.PSEU 
PSEU.ER JSR ERR.3 ;ILLEGAL PSEUDO-OP 
 JMP AS.GOON 
;
FI/EX.PSEU LDX #PSEU.TABLE-COM.TABLE
 JSR SRCH.COM 
 LDX #0
 JMP PSEU.ER 
;
MNEM? LDA CRT+3,Y 
 CMP #$20 
 BNE IFPSEU?.1 
 JSR SRCH.MNEM 
 BEQ BRA? 
 LDA MNEM.TABLE,X 
LAST.OB JSR ST/PR.OB 
 JMP AS.GOON 
;
BRA? LDX #MNEM.BRA-MNEM.TABLE
 JSR SRCH.MNEM 
 BEQ MOD? 
 LDA MNEM.TABLE,X 
 JSR ST/PR.OB 
 JSR NXT.WORD 
 LDA PASS 
 BEQ LAST.OB.1 
 JSR OPER/TST 
 CLC  
 LDA *PROC_ADDRS 
 SBC *PC 
 PHA  
 LDA *PROC_ADDRS+1 
 SBC *PC+1 
 BNE BRA<0 
 PLA  
 CMP #$80 
 BCC LAST.OB.1 
RANGE.ER JSR ERR.1 ;BRANCH OUT OF RANGE 
 JMP LAST.OB 
;
BRA<0 CMP #0-1
 JMP BRA<<? 
;
BRA<? CMP #$80 
 BCC RANGE.ER 
LAST.OB.1 JMP LAST.OB 
;
MOD? LDX #MNEM.MODS-MNEM.MODS
 JSR SRCH.MODS 
 BNE WHICHMODE? 
IFPSEU?.1 JMP IFPSEU? 
;
WHICHMODE? JSR NXT.LETTER 
 LDA CRT,Y 
 CMP #'# 
 BNE ACCU? 
 LDX #11
 JSR FETCH.OP 
 LDX #AT.LABL/H-AT.COND
 JSR SRCH.AT 
 INY  
 LDA CRT,Y 
 CMP #$27 ;' 
 BNE IMM.LABEX 
 LDA CRT+1,Y 
 JMP LAST.OB 
;
IMM.LABEX LDX #0
 JSR OPER/TST 
 LDA *PROC_ADDRS 
 JMP LAST.OB 
;
IMM.LAB.L JSR OPER/TST 
 LDA *PROC_ADDRS 
 JSR ST/PR.OB 
 LDA EXT 
 BEQ AS.GOON.6 
 LDA #$1F 
 BNE P3?>RDIR 
;
IMM.LAB.H JSR OPER/TST 
 LDA *PROC_ADDRS+1 
 JSR ST/PR.OB 
 LDA EXT 
 BEQ AS.GOON.6 
 LDA #$2F 
P3?>RDIR PHA  
 LDA PASS 
 BPL NOTP3 
 PLA  
 INC HEX/DEC 
 PHA  
 JSR ST/PR.OB 
 PLA  
 CMP #$2F 
 BEQ P3.LALSO 
AS.GOON.6 JMP AS.GOON 
;
NOTP3 PLA  
 JMP AS.GOON 
;
P3.LALSO LDA *PROC_ADDRS 
 INC HEX/DEC 
 JMP LAST.OB 
;
 .CT
EXT?>P3? JSR ST/PR.OB
 LDA EXT 
 BNE AS.GOON.6 
 LDA #$0F 
 JMP P3?>RDIR 
;
ACCU LDX #12
 JSR FETCH.OP 
 JMP AS.GOON 
;
ACCU? LDX #MOD.ACCU-COM.TABLE
 JSR SRCH.COM 
 TAX  
 LDA CRT,Y 
 CMP #'* 
 BNE INDIR? 
 INY  
 JSR GET.OPER 
 BEQ ZEROPG 
 LDX #AT.ZXY-AT.COND
 BNE ABSINDX? 
;
INDIR? CMP #'( 
 BNE ABS? 
 INY  
 JSR GET.OPER 
 LDX #MOD.IND-COM.TABLE
 JSR SRCH.COM 
 LDX #AT.INDXY-AT.COND
 BNE ABSINDX? 
;
 BNE ABSINDX? 
ABS? JSR GET.OPER 
 BEQ ABS 
 LDX #AT.AXY-AT.COND
ABSINDX? JSR SRCH.AT 
 TAX  
 JMP OP.ER 
;
IND.ABS INX  
ABS.Y INX  
ABS.X INX  
ABS INX  
 JSR FETCH.OP 
ST/PR.LOPR LDA *PROC_ADDRS 
 JSR ST/PR.OB 
 LDA *PROC_ADDRS+1 
 JMP EXT?>P3? 
;
IND.X INX  
IND.Y INX  
ZERO.Y INX  
ZERO.X INX  
ZEROPG INX  
 INX  
 INX  
 INX  
 INX  
 JSR FETCH.OP 
 LDA *PROC_ADDRS 
 JSR ST/PR.OB 
 LDA *PROC_ADDRS+1 
 BEQ AS.GOON.D 
 LDX #0
 LDA PASS 
 BEQ AS.GOON.D 
 JSR ERR.0 ;NO ZERO-PAGE ADDR 
AS.GOON.D JMP AS.GOON 
;
FETCH.OP STX *SCRAT0 
 LDX *PNTR 
 LDA MNEM.MODS+1,X 
 STA *SCRAT0+1 
 LDA #4
 STA *SCRAT1 
 LDA MNEM.MODS,X 
NXT.A.OP DEC *SCRAT1 
 BMI TRY.Z.OPS 
 ASL A 
 BCC DONT.SKA 
 INX  
DONT.SKA DEC *SCRAT0 
 BNE NXT.A.OP 
 BCS FETCHIT 
MODE.ER LDX #0
 JSR ERR.B ;UNIMPLEMENTED ADDR MODE
 RTS  
;
TRY.Z.OPS LDA *SCRAT0+1 
NXT.Z.OP ASL A 
 BCC DONT.SKZ 
 INX  
DONT.SKZ DEC *SCRAT0 
 BNE NXT.Z.OP 
 BCC MODE.ER 
FETCHIT LDA MNEM.MODS+1,X 
ST/PR.OB PHA  
 LDX #0
 LDA PASS 
 BEQ SKIP.STOR 
 BMI P3.STORE 
 LDA TLIST 
 BEQ ST.OBJ.BYT 
 LDA *MAC.EXPAND 
 BEQ PR.OB 
 LDA *LST.EXP.OB 
 BEQ ST.OBJ.BYT 
PR.OB LDA *LN.INDEX 
 BNE PR.OB/NL? 
PR.1E.OB LDA #5
 STA *LN.INDEX 
 JSR PR.PC/_ 
PR.OB/NL? LDA *LN.INDEX 
 CMP #14
 BNE PR.OBJ.BYT 
 JSR PR.ASLIN 
 JSR OUT.CR 
 JMP PR.1E.OB 
;
PR.OBJ.BYT JSR OUT.SP 
 LDA *LN.INDEX 
 CLC  
 ADC #3
 STA *LN.INDEX 
 PLA  
 PHA  
 JSR OUT.BYTE 
ST.OBJ.BYT LDA OSTORE 
 BEQ SKIP.STOR 
 PLA  
 STA (REL,X) 
INC.PC/REL JSR INC.PC 
 JSR INC.REL 
 RTS  
;
PR.PC/_ LDA *PC+1 
 JSR OUT.BYTE 
 LDA *PC 
 JSR OUT.BYTE 
 LDA #'- 
 JSR OUTCHAR 
 RTS  
;
SKIP.STOR PLA  
 CLV  
 BVC INC.PC/REL 
;
P3.STORE PLA  
 JSR ST.IN.RBUF 
 LDA HEX/DEC 
 BNE RDIR.STRD 
 JSR INC.PC 
 JMP RBUFULL? 
;
RDIR.STRD DEC HEX/DEC 
RBUFULL? LDA REC_POINT 
 CMP #$FF 
 BCS PUT.RBUF/R 
 RTS  
;
PUT.RBUF/R JSR PUT.RBUF 
RESET.RBUF STX REC_POINT 
 LDA *PC 
 JSR ST.IN.RBUF 
 LDA *PC+1 
 JSR ST.IN.RBUF 
 RTS  
;
EN.PASS2 BEQ NO.LA 
@LABELS JSR EX.LA 
NO.LA JSR CLR.SPR.// 
 JSR PR.ERRORS 
 JSR PR.PC/REL 
 JMP MON.LOOP 
;
PR.ERRORS LDA *ERRORS+1 
 JSR OUT.BYTE 
 LDA *ERRORS 
 JMP OUT.BYTE 
;
PR.PC/REL LDA #', 
 JSR OUTCHAR 
 LDA *PC+1 
 JSR OUT.BYTE 
 LDA *PC 
 JSR OUT.BYTE 
 LDA #', 
 JSR OUTCHAR 
 LDA *REL+1 
 JSR OUT.BYTE 
 LDA *REL 
 JMP OUT.BYTE 
;
SPRES:STST LDA STST 
 STA *SPRES 
 LDA STST+1 
 STA *SPRES+1 
 RTS  
;
PR.ASLN/ER TYA  
 PHA  
 JMP PR.SUPR? 
;
PR.ASLIN TYA  
 PHA  
 LDA PASS 
 CMP #1
 BNE ASLN.PRNTD 
 LDA TLIST 
 BEQ ASLN.PRNTD 
PR.SUPR? LDA *LN.2B.OUT 
 BEQ ASLN.PRNTD 
 LDY *LN.INDEX 
 LDA *MAC.EXPAND 
 BNE ASLN.PRNTD 
TO16 INY  
 JSR OUT.SP 
 CPY #16
 BCC TO16 
 LDY *LINE.LEN 
 JSR PR.FIRST 
 JSR OUT.SP 
 JSR PR.CRT 
ASLN.PRNTD STX *LN.INDEX 
 PLA  
 TAY  
 STX *LN.2B.OUT 
 RTS  
;
NEWLABEL LDA *SPRES 
 STA *SAVEM 
 LDA *SPRES+1 
 STA *SAVEM+1
 LDA *MAC.EXPAND 
 BEQ NL.MDEF? 
 JSR MAC.DEF? 
 BNE NL.MLAB? 
 CLC  
 RTS  
;
NL.MLAB? JSR MAC.LAB? 
 BNE NL.NORM 
 JSR SET.MSEQ 
 JMP NL.STSEQ 
;
NL.MDEF? JSR MAC.DEF? 
 BNE NL.NORM 
 JSR PR.ASLIN 
 LDA #0
 STA CRT+1,Y 
 STA CRT+2,Y 
 LDA *MG_FLAG 
 BNE NL.STSEQ 
 JSR SET.FSEQ 
NL.STSEQ STY *SAVEY 
 JSR ST.LABADR 
 LDX *SAVEY 
 JSR ST.LABCH 
 JSR ST.LABCH 
 JSR ST.LABCH 
 JMP NL.STLAB 
;
NL.NORM STY *SAVEY 
 JSR ST.LABADR 
 LDX *SAVEY 
NL.STLAB LDA CRT,X 
 CMP #'@ 
 BCC NL.ILLCH 
NL.CHAR1 JSR ST.LABCH 
 LDA CRT,X 
 CMP #$20 
 BEQ NL.LAST? 
 LDA *MAC.EXPAND 
 BEQ NL.NXTCH 
 LDA CRT,X 
 CMP #') 
 BEQ NL.LAST? 
NL.NXTCH LDA CRT,X 
 JSR TSTLABCH 
 BCC NL.CHAR1 
NL.ILLCH JSR ST.END.0 
 LDX #0
 JSR ERR.C ;ILLEGAL CHAR IN LABEL 
 SEC  
 RTS  
;
NL.LAST? LDA (SPRES),Y 
 ORA #%10000000
 STA (SPRES),Y 
 SEC  
 TYA  
 ADC *SPRES 
 STA *SPRES 
 LDX #0
 TXA  
 ADC *SPRES+1 
 STA *SPRES+1 
 CMP STEN+1 
 BEQ S.OVFLW? 
 BCS S.OVFLW 
NL.DUP? JSR ST.END.0 
 LDY *SAVEY 
 JSR EV.LABEX 
 LDA *SCRAT0+1 
 PHA  
 LDA *SCRAT0 
 PHA  
 JSR NXT.LAB/SK 
 JSR GETFRSTCH 
 BEQ NL.OK 
 PLA  
 STA *SCRAT0 
NL.DUPER PLA  
 STA *SCRAT0+1 
 JSR ERR.6 ;DULPLICATE LABEL 
 JMP OLDSPRES 
;
NL.OK PLA  
 STA *SCRAT0 
 PLA  
 STA *SCRAT0+1 
 LDY *SAVEY 
 CLC  
 RTS  
;
S.OVFLW? LDA *SPRES 
 CMP STEN 
 BCC NL.DUP? 
S.OVFLW JSR ERR.E ;LABEL FILE OVRFLW
OLDSPRES LDA *SAVEM 
 STA *SPRES 
 LDA *SAVEM+1
 STA *SPRES+1 
 JSR ST.END.0 
 LDY *SAVEY 
 SEC  
 RTS  
;
ST.END.0 LDA #0
 LDY #2
 STA (SPRES),Y 
 RTS  
;
MAC.DEF? LDA CRT,Y 
 CMP #'! 
MAC.CMP2/3 BNE RET.M 
 CMP CRT+1,Y 
 BNE RET.M 
 CMP CRT+2,Y 
RET.M RTS  
;
MAC.LAB? LDA CRT,Y 
 CMP #'. 
 JMP MAC.CMP2/3 
;
SET.FSEQ LDA *FILE.SEQ 
 STA CRT+1,Y 
 LDA *FILE.SEQ+1 
 STA CRT+2,Y 
 RTS  
;
SET.MSEQ LDA *MAC.SEQ 
 STA CRT+1,Y 
 LDA *MAC.SEQ+1 
 STA CRT+2,Y 
 RTS  
;
ST.LABADR LDY #$00 
 LDA *PC 
 STA (SPRES),Y 
 LDA *PC+1 
 INY  
 STA (SPRES),Y 
 RTS  
;
ST.LABCH LDA CRT,X 
 INY  
 STA (SPRES),Y 
 INX  
 RTS  
;
NXT.LAB/SK LDY #2
 LDA (SCRAT0),Y 
 CMP #'. 
 BEQ SKIP.SEQ 
 CMP #'! 
 BNE NO.SEQ 
SKIP.SEQ JSR INC.SCR0 
 JSR INC.SCR0 
 JSR INC.SCR0 
NO.SEQ JSR NXT.LIN/LA 
 RTS  
;
GET.OPER STX EXT 
 CPY #80
 BCC GET.OPR.DO 
 JSR ERR.A ;NO OPERAND
 RTS  
;
GET.OPR.DO STX *PROC_ADDRS 
 STX *PROC_ADDRS+1 
 STX ADDPAD 
 JMP ADD.GET 
;
GOTIT? LDA CRT,Y 
 CMP #'+ 
 BEQ ADD 
 CMP #'- 
 BEQ SUBTR 
 CMP #$20 
 RTS  
;
ADD INY  
ADD.GET JSR EV.LABEX 
 BCS ADD.DO 
 INC ADDPAD 
ADD.DO CLC  
 LDA ADDRS 
 ADC *PROC_ADDRS 
 STA *PROC_ADDRS 
 LDA ADDRS+1 
 ADC *PROC_ADDRS+1 
 STA *PROC_ADDRS+1 
 JMP GOTIT? 
;
SUBTR INY  
 JSR EV.LABEX 
 BCS SUBTR.DO 
 INC ADDPAD 
SUBTR.DO SEC  
 LDA *PROC_ADDRS 
 SBC ADDRS 
 STA *PROC_ADDRS 
 LDA *PROC_ADDRS+1 
 SBC ADDRS+1 
 STA *PROC_ADDRS+1 
 JMP GOTIT? 
;
EV.LABEX JSR SR0:STST 
 STX *SYMBOLIC 
 STY *SCRAT3 
 STX ADDRS 
 STX ADDRS+1 
 LDA CRT,Y 
 CMP #'% 
 BNE EV.TSTDEC 
EV.BINEX INY  
 LDA CRT,Y 
 CMP #'0 
 BEQ EV.BIN0 
 CMP #'1 
 BEQ EV.BIN1 
 SEC  
 RTS  
;
EV.BIN0 CLC  
 BCC EV.BININ 
;
EV.BIN1 SEC  
EV.BININ ROL ADDRS 
 ROL ADDRS+1 
 JMP EV.BINEX 
;
EV.TSTDEC JSR EV.DEC? 
 BCS EV.DECEX 
 LDA CRT,Y 
 JMP EV.TSTHX 
;
EV.DECEX INY  
 LDA CRT,Y 
 JSR EV.DEC? 
 BCS EV.DECEX 
 TYA  
 PHA  
EV.DECCNT DEY  
 LDA CRT,Y 
 STY *SAVE 
 JSR EV.DEC? 
 BCC EV.DECOK 
 BEQ EV.DECNXT 
 TAY  
EV.DECCONV LDA DEC.TABL,X 
 CLC  
 ADC ADDRS 
 STA ADDRS 
 LDA DEC.TABH,X 
 ADC ADDRS+1 
 STA ADDRS+1 
 DEY  
 BNE EV.DECCONV 
EV.DECNXT LDY *SAVE 
 INX  
 CPX #5
 BNE EV.DECCNT 
EV.DECOK PLA  
 TAY  
 LDX #0
 SEC  
 RTS  
;
DEC.TABL .BY $01 $0A $64 $E8 $10
DEC.TABH .BY $00 $00 $00 $03 $27
;
 .CT
EV.DEC? CMP #'0
 BCC EV.NODEC 
 CMP #':
 BCC EV.DECIM 
EV.NODEC CLC  
 RTS  
;
EV.DECIM AND #%00001111
 SEC  
 RTS  
;
EV.TSTHX CMP #'$ 
 BEQ EV.HEXEX 
 CMP #'= 
 BEQ EV.PC 
EV.SYM LDX *SCRAT3 
 LDY #2
 LDA (SCRAT0),Y 
 CMP #'/
 BNE EV.TABEND? 
 INY  
EV.TABEND? LDA (SCRAT0),Y 
 BEQ EV.TABEND 
 JMP EV.MSEQ? 
;
EV.TABEND LDX #0
 LDY *SCRAT3 
EV.SKLAB INY  
 LDA CRT,Y 
 JSR TSTLABCH 
 BCC EV.SKLAB 
 CMP #'! 
 BEQ EV.NEST? 
 CMP #'. 
 BNE EV.TSTP2 
EV.NEST? LDA *MAC.SRCH 
 BNE EV.SKLAB 
 LDA *MAC.EXPAND 
 BNE EV.SKLAB 
EV.TSTP2 LDA PASS 
 BEQ EV.NOTOK 
 JSR ERR.8 ;UNDEFINED LABEL 
EV.NOTOK CLC  
 RTS  
;
EV.PC LDA *PC 
 STA ADDRS 
 LDA *PC+1 
 STA ADDRS+1 
 INY  
 SEC  
 RTS  
;
EV.HEXEX LDX #ADDRS-TXST
 INY  
 JSR PARM 
 LDA *SCRAT2 
 BNE EV.OK 
 JSR ERR.D ;HEX CHAR EXPECTED 
 CLC  
 RTS  
;
EV.COMP LDA (SCRAT0),Y 
 PHP  
 AND #%01111111
 CMP CRT,X 
 BNE EV.NOMATCH 
 INX  
 INY  
 PLP  
 BPL EV.COMP 
 TXA  
 TAY  
 LDA CRT,Y 
 JSR TSTLABCH 
 BCS EV.SYMEQ 
 BCC EV.TONXT 
;
EV.NOMATCH PLP  
EV.TONXT LDX #0
 JSR NXT.LAB/SK 
 CLV  
 BVC EV.SYM 
;
EV.SYMEQ TYA  
 TAX  
 LDY #0
 LDA (SCRAT0),Y 
 STA ADDRS 
 INY  
 LDA (SCRAT0),Y 
 STA ADDRS+1 
 INY  
 LDA (SCRAT0),Y 
 CMP #'/
 BEQ EV.EXT 
 INC EXT 
EV.EXT TXA  
 TAY  
 LDX #0
 INC *SYMBOLIC 
EV.OK SEC  
 RTS  
;
OPER/TST JSR GET.OPER 
 BNE OP.ER.1 
 RTS  
;
OP.ER.1 JSR ERR.A ;ERR IN OR NO OPERAND 
 RTS  
;
TSTLABCH CMP #'. 
 BCC BAD.LA.CHA 
 CMP #'= 
 BEQ BAD.LA.CHA 
 CMP #'{
 BCC LAB.CHA.OK 
BAD.LA.CHA SEC  
LAB.CHA.OK RTS  
;
EX.LA LDY #MES.LABS-MES.ERROR
 JSR MESSAGE 
 JSR SR0:STST 
LA.PRALL STX *DC 
 JSR OUT.CR 
LA.END LDY #2
 LDA (SCRAT0),Y 
 BNE LA.NORM? 
 JSR OUT.CR 
 RTS  
;
LA.NORM? JSR CRT:TXTLIN 
 LDA CRT 
 CMP #'! 
 BEQ LA.NXT 
 CMP #'. 
 BNE LA.PRONE 
LA.NXT JSR NXT.LAB/SK 
 JMP LA.END 
;
LA.PRONE TYA  
 CLC  
 ADC *DC 
 STA *DC 
 JSR PR.CRT 
 LDA #'= 
 JSR OUTCHAR 
 JSR PR.FIRST 
 JSR NXT.LAB/SK 
 LDY *DC 
LA.COL? LDY *DC 
 JSR OUT.SP 
 INY  
 STY *DC 
 CPY #18
 BEQ LA.END 
 CPY #36
 BEQ LA.END 
 BCS LA.PRALL 
 BNE LA.COL? 
;
@PASS STX HEX/DEC 
 JMP EX.PASS2 
;
EV.MSEQ? LDA (SCRAT0),Y 
 CMP #'. 
 BNE EV.FSEQ? 
 LDA *MAC.EXPAND 
 BEQ EV.TONXT.1 
 INY  
 LDA (SCRAT0),Y 
 CMP *MAC.SEQ 
 BNE EV.TONXT.1 
 INY  
 LDA (SCRAT0),Y 
 CMP *MAC.SEQ+1 
 BNE EV.TONXT.1 
 LDA CRT,X 
 CMP #'. 
 BNE EV.TONXT.1 
 BEQ EV.MACSRCH 
EV.FSEQ? CMP #'! 
 BNE EV.MSRCH? 
 INY  
 LDA (SCRAT0),Y 
 BNE EV.FSEQ 
 INY  
 LDA (SCRAT0),Y 
 BEQ EV.FSEQ.OK 
 DEY  
 LDA (SCRAT0),Y 
EV.FSEQ CMP *FILE.SEQ 
 BNE EV.TONXT.1 
 INY  
 LDA (SCRAT0),Y 
 CMP *FILE.SEQ+1 
 BNE EV.TONXT.1 
EV.FSEQ.OK LDA *MAC.SRCH 
 BEQ EV.MACSRCH 
 BNE EV.MACDEF 
;
EV.MSRCH? LDA *MAC.SRCH 
 BNE EV.TONXT.1 
 LDA CRT,X 
 CMP #'. 
 BEQ EV.TONXT.1 
 CMP #'! 
 BNE EV.COMP.1 
EV.TONXT.1 JMP EV.TONXT 
;
EV.MACSRCH INX  
 INX  
 INX  
EV.MACDEF INY  
EV.COMP.1 JMP EV.COMP 
;
TD.0.OFF LDA PIA.PBD 
 ORA #%00100000
 STA PIA.PBD 
 RTS  
;
TD.1.OFF LDA PIA.PBD 
 ORA #%01000000
 STA PIA.PBD 
 RTS  
;
TD.0.ON LDA PIA.PBD 
 AND #%11011111
 STA PIA.PBD 
 RTS  
;
TD.1.ON LDA PIA.PBD 
 AND #%10111111
 STA PIA.PBD 
 RTS  
;
@OFF LDX #FIRST-TXST
 JSR GETDECPARM 
 LDA FIRST 
 BNE TST.TD.1 
 JSR TD.0.OFF 
 JMP MONLOOP1 
;
TST.TD.1 CMP #1
 BEQ TD.1.OFF.1 
ERR.16.1 JMP ERR.16 ;ILLEGAL TAPEDECK NR 
;
TD.1.OFF.1 JSR TD.1.OFF 
 JMP MONLOOP1 
;
@ON LDX #FIRST-TXST
 JSR GETDECPARM 
 LDA FIRST 
 BNE TST.TD1 
 JSR TD.0.ON 
 JMP MONLOOP1 
;
TST.TD1 CMP #1
 BNE ERR.16.1 ;ILLEGAL TAPEDECK NR
 JSR TD.1.ON 
 JMP MONLOOP1 
;
DELAY.8T JSR DELAY.4T 
DELAY.4T JSR DELAY.2T 
DELAY.2T JSR DELAY.T 
DELAY.T LDX #96
 STX DELAY1 
 STX DELAY2 
DELAY.ON INC DELAY1 
 BNE DELAY.ON 
 INC DELAY2 
 BNE DELAY.ON 
 LDX #0 
 RTS  
;
TD.1.ONW JSR TD.1.ON 
 JSR DELAY.T 
 RTS  
;
TD.0.ONW JSR TD.0.ON 
 JSR DELAY.8T 
 RTS  
;
TD.1.OFW JSR DELAY.T 
 JSR TD.1.OFF 
 RTS  
;
TD.0.OFW JSR DELAY.T 
 JSR TD.0.OFF 
 RTS  
;
OUTCHAR PHA  
 STY *SAVEY 
 STX *SAVEX 
 LDA PRINT/CTL 
 BEQ NO.HARDCP 
 PLA  
HA.LAYOUT1 PHA  
 JSR HA.LAYOUT 
NO.HARDCP PLA  
 JSR PR/BRKTST 
 LDY *SAVEY 
 LDX *SAVEX 
 CLD  
 RTS  
;
IN/SAVXY STY *SAVEY 
 STX *SAVEX 
 JSR IN/TST.CHR 
 LDY *SAVEY 
 LDX *SAVEX 
 CLD  
 RTS  
;
OUT.CR JSR OUT.CR.1 
 NOP  
 NOP  
 NOP  
 NOP  
 NOP  
 RTS  
;
OUT.CR.1 LDA #$0D ;CR
 JSR OUTCHAR 
 RTS  
;
OUT.2SP JSR OUT.SP 
OUT.SP LDA #$20 
 JSR OUTCHAR 
 RTS  
;
OUT.BYTE PHA  
 LSR A 
 LSR A 
 LSR A 
 LSR A 
 JSR OUT.NIBBLE 
 PLA  
 JSR OUT.NIBBLE 
 RTS  
;
OUT.NIBBLE AND #%00001111
 ORA #%00110000
 CMP #':
 BCC NODEC 
 ADC #6
NODEC JSR OUTCHAR 
 RTS  
;
 .CT
@NUMBER JSR EX.NUMB 
 JMP MON.LOOP 
;
EX.NUMB JSR IN.F/L 
 LDA LAST+1 
 CMP #$FF 
 BNE RENUMB 
 JMP ERR.11 ;MISSING PARM IN NU COMM
;
RENUMB LDY #0 
 CLC  
 SED  
RENU.LN PHP  
 CPY #2 
 BNE RENU.ADD 
 JSR NXT.LIN/LA 
 PLP  
 BCC RENUMBD? 
 JMP ERR.10 ;LINE # OVRFLW 
;
RENUMBD? LDA (SCRAT0),Y 
 BNE RENUMB 
 CLD  
 RTS  
;
RENU.ADD PLP  
 LDA LAST,Y 
 ADC FIRST,Y 
 STA FIRST,Y 
 STA (SCRAT0),Y 
 INY  
 BNE RENU.LN 
;
@.RC LDA #$6F 
 JMP P3?>RDIR 
;
GP.LNGE LDX #FIRST-TXST 
 JSR GETDECPARM 
P.X.FEOF STY *SAVE 
 JSR FIND.LNGE 
 LDY *SAVE 
 RTS  
;
GET JSR G.PARMS 
G.GOTIT? LDA HFILE/NO 
 CMP #$EE 
 BEQ G.EOF 
 LDA LOAD/NO 
 BEQ G.TRYAGN 
 JMP MON.LOOP 
;
G.TRYAGN JSR G.HFILE 
 JMP G.GOTIT? 
;
G.EOF JSR TXT.END.0 
 JMP MON.LOOP 
;
G.PARMS JSR GET.FILNO 
 JSR GET.CRT.UP 
 CMP #$20 
 BNE G.APP? 
G.CLEAR JSR TXT.CLEAR 
 CLC  
 BCC G.SA 
;
G.APP? CMP #'A 
 BNE G.SRCHSA 
G.SA LDA *TPRES 
 STA *SCRAT0 
 LDA *TPRES+1 
 STA *SCRAT0+1 
 CLC  
 BCC G.HFILE 
;
G.SRCHSA JSR GP.LNGE 
G.HFILE JSR TD.1.ONW 
 JSR TADS:HFADS 
 STA LOAD/NO 
 JSR LOADER 
 BNE G.LOAD.ERR 
 LDA *SCRAT0 
 STA TSTART 
 LDA *SCRAT0+1 
 STA TSTART+1 
 SEC  
 LDA HEND 
 SBC HSTART 
 PHA  
 LDA HEND+1 
 SBC HSTART+1 
 TAX  
 PLA  
 STA *PROC_ADDRS 
 CLC  
 ADC *SCRAT0 
 STA TEND 
 TXA  
 STA *PROC_ADDRS+1 
 ADC *SCRAT0+1 
 STA TEND+1 
 LDA #0 
 STA LOAD/NO 
 LDA FILE.NO 
 BEQ G.DOLOAD 
 CMP HFILE/NO 
 BNE G.A.FILE 
G.DOLOAD INC LOAD/NO 
 LDA TEND+1 
 CMP TXEN+1 
 BCC G.A.FILE 
 BNE G.TXTOVFLW 
 LDA TEND 
 CMP TXEN 
 BCC G.A.FILE 
G.TXTOVFLW LDA #1 
 STA TERM 
 LDX #0 
 JMP ERR.F ;TEXT FILE OVRFLW 
;
G.A.FILE JSR LOADER 
 BNE G.LOAD.ERR 
 LDX #0 
 JSR G.LOADED 
 JSR TD.1.OFW 
 JSR PR.FILINFO 
 RTS  
;
G.LOAD.ERR LDX #0 
 LDA LOAD/NO 
 BEQ G.NT.FATAL 
 STA TERM 
G.NT.FATAL JSR TXT.END.0 
 JSR ERR.17 ;CHECKSUM ERROR 
 RTS  
;
TADS:HFADS LDA #L,HFILE/NO
 STA TSTART 
 LDA #L,HEND+2
 STA TEND 
 LDA #H,TSTART
 STA TSTART+1 
 STA TEND+1 
 RTS  
;
@PUT JSR HFL:TXTADS 
 JSR GET.CRT.UP 
 CMP #$20 
 BEQ PUTIT/RETM 
 CMP #'X 
 BNE P.FILNO 
 LDA #$EE 
 STA FILE.NO 
 STA FIRST+1 
 JSR P.X.FEOF 
 INY  
 BNE P.SA 
P.FILNO JSR GET.FILNO 
 CPY #80
 BCS PUTIT/RETM 
 JSR GP.LNGE 
P.SA LDA *SCRAT0 
 STA HSTART 
 LDA *SCRAT0+1 
 STA HSTART+1 
 JSR NXT.LETTER 
 LDX #FIRST-TXST 
 JSR GETDECPARM 
 LDY #2 
 LDA (SCRAT0),Y 
 BEQ P.EA 
 JSR LNNRLESS 
 BCS P.EA 
 BPL P.EA 
 JSR NXT.LIN/LA 
P.EA LDA *SCRAT0 
 STA HEND 
 LDA *SCRAT0+1 
 STA HEND+1 
PUTIT/RETM JSR PUTIT 
 JMP MON.LOOP 
;
PUT.H/F JSR TADS:HFADS 
 LDA FILE.NO 
 STA HFILE/NO 
 JSR PUT.H 
 LDY #3 
PUT.F LDA HSTART,Y 
 STA TSTART,Y 
 DEY  
 BPL PUT.F 
PUT.H JSR SAVER 
 RTS  
;
G.LOADED LDA LOAD/NO 
 BEQ G.RET 
 LDA TEND 
 STA *TPRES 
 LDA TEND+1 
 STA *TPRES+1 
 JSR TXT.END.0 
G.RET RTS  
;
PR.FILINFO LDA #'F 
 JSR OUTCHAR 
 LDA HFILE/NO 
 JSR OUT.BYTE 
 JSR OUT.2SP 
 LDA *PROC_ADDRS+1 
 JSR OUT.BYTE 
 LDA *PROC_ADDRS 
 JSR OUT.BYTE 
 LDA LOAD/NO 
 BEQ PR.NOADRS 
 JSR OUT.2SP 
 LDA TSTART+1 
 JSR OUT.BYTE 
 LDA TSTART 
 JSR OUT.BYTE 
 LDA #'- 
 JSR OUTCHAR 
 LDA TEND+1 
 JSR OUT.BYTE 
 LDA TEND 
 JSR OUT.BYTE 
PR.NOADRS JSR OUT.CR 
 RTS  
;
SET.BOUNDS LDA DEFAULTS,X 
 STA TXST,X 
 INX  
 CPX #8 
 BCC SET.BOUNDS 
 LDA DEFAULTS+8 
 STA *PURECL 
 LDA DEFAULTS+9 
 STA *PURECH 
 LDX #0 
CLR.TXT/ST JSR TXT.CLEAR 
 JSR SPRES:STST 
 JSR ST.END.0 
 RTS  
;
DEFAULTS .SE $4163
 .SE $9FFC
 .SE $A000
 .SE $BEFC
 .SE $BF00
;
@FIND STY EDIT/FINDC
 JMP ED.STRING
;
@EDIT STX EDIT/FINDC
 STX *SCRAT1
 JSR GET.CRT.HX
 BEQ ED.STRING
 LDA *SCRAT1
 BNE ED.STRING
 JMP ED.LINE
;
EDSYN.ER LDX #0
 JMP ERR.15 ;SYNTX ERR IN ED COMM 
;
ED.STRING LDA #'% 
 STA *DC 
 STX *ERRORS 
 STX *ERRORS+1 
 INC TABSN 
 LDX #2 
 LDA CRT,Y 
 STA *DELIM 
 INY  
 TYA  
 STA CRTEX,X 
ED.SAVSTRS CPX #1 
 BNE EF.SAVSTR 
 LDA EDIT/FINDC 
 BNE EF.EMPTY? 
EF.SAVSTR LDA CRT,Y 
 STA CRTEX,Y 
 INY  
 CPY #76
 BCS EDSYN.ER 
 CMP *DELIM 
 BNE ED.SAVSTRS 
 TYA  
 DEX  
 STA CRTEX,X 
 BNE ED.SAVSTRS 
EF.EMPTY? LDA CRTEX+1 
 CLC  
 SBC CRTEX+2 
 BEQ EDSYN.ER 
 LDX #0 
 STX CRTEX+3 
 JSR NXT.LETTER 
 LDA CRT,Y 
 CMP #'% 
 BNE ED.SUBCS? 
 INY  
 LDA CRT,Y 
 STA *DC 
 INY  
 JSR NXT.LETTER 
 LDA CRT,Y 
ED.SUBCS? CMP #'* 
 BNE EF.SUPPRO? 
 INC CRTEX+3 
 BNE EF.TOPARMS 
;
EF.SUPPRO? CMP #'#
 BNE EF.GTPARMS 
 DEC CRTEX+3 
EF.TOPARMS JSR NXT.WORD 
EF.GTPARMS JSR IN.F/L 
EF.EOF? LDY #2 
 LDA (SCRAT0),Y 
 BNE EF.SRCHSTR 
 JMP ED.DONE 
;
EF.SRCHSTR JSR EF.C:T 
 STX ADDRS 
EF.SRCHA1 LDX CRTEX+2 
 LDY ADDRS 
EF.EOL? CPY *SAVE 
 BEQ EF.DC/DLM? 
 BCS EF.NEWLN 
EF.DC/DLM? LDA CRTEX,X 
 CMP *DC 
 BEQ EF.MATCH 
 CMP *DELIM 
 BNE EF.CMPCH 
 LDX #0 
 STY CRTEX-1 
 BEQ EF.FOUND 
;
EF.CMPCH CMP CRT,Y 
 BEQ EF.MATCH 
EF.SRCHON INC ADDRS 
 BNE EF.SRCHA1 
;
EF.MATCH INX  
 INY  
 BNE EF.EOL? 
;
EF.NEWLN LDX #0 
EF.NXTLN JSR NXT.LIN/LA 
 LDY #2 
EF.DONE? DEY  
 BMI EF.EOF?.1 
 LDA LAST,Y 
 CMP (SCRAT0),Y 
 BEQ EF.DONE? 
 BCC ED.DONE 
EF.EOF?.1 JMP EF.EOF? 
;
EF.FOUND JSR INC.ERRORS 
 LDA EDIT/FINDC 
 BNE EF.PRCOLNR 
 LDA CRTEX+3 
 BMI ED.CHNGE? 
 BEQ ED.CHNGE? 
EF.PRCOLNR LDA CRTEX+3 
 BMI ED.SUBCIN? 
 JSR OUT.SP 
 LDA ADDRS 
 JSR OUT.BYTE 
 JSR EF.PRLIN 
ED.CR JSR OUT.CR 
ED.SUBCIN? LDA EDIT/FINDC 
 BNE EF.SRCHON 
 LDA #'* 
 JSR OUTCHAR 
 JSR IN/SAVXY 
 JSR UPPERCASE 
 PHA  
 JSR OUT.CR 
 PLA  
 CMP #'S 
 BEQ EF.NEWLN 
 CMP #'X 
 BNE ED.MA^F? 
ED.DONE JSR CLR.SPR.// 
 JSR PR.ERRORS 
 JMP MONLOOP1 
;
ED.MA^F? CMP #'M 
 BEQ EF.SRCHON 
 CMP #'A 
 BEQ ED.CHNGE? 
 CMP #$06 ;ACK? (^F) 
 BNE ED.D? 
 JSR EL.START 
 JSR OUT.CR 
 JMP EF.NEWLN 
;
ED.D? CMP #'D 
 BNE ED.CR 
 JSR FI.LN/DEL 
 JMP EF.NXTLN 
;
ED.CHNGE? LDA EDIT/FINDC 
 BEQ ED.CHNGE 
 JMP EF.SRCHON 
;
ED.CHNGE LDA CRTEX-1 
 TAY  
 SEC  
 SBC ADDRS 
 TAX  
ED.DELSTR JSR ED.DELCH 
 DEX  
 BNE ED.DELSTR 
 LDX CRTEX+1 
ED.INSSTR LDA CRTEX,X 
 CMP *DELIM 
 BEQ ED.LINOK 
 JSR ED.INSCH 
 INY  
 INX  
 BNE ED.INSSTR 
ED.LINOK STY ADDRS 
 JSR ED.CHNGELN 
 BCS ED.PRNEW? 
 JMP EF.EOF?.1 
;
ED.PRNEW? LDA CRTEX+3 
 BPL ED.PRNEW 
 LDA #0 
 JSR OUTCHAR 
 JMP EF.SRCHA1 
;
ED.PRNEW JSR EF.PRLIN 
 JSR OUT.CR 
 JMP EF.SRCHA1 
;
EF.C:T LDA FORMAT 
 PHA  
 STX FORMAT 
 JSR CRT:TXTLIN 
 PLA  
 STA FORMAT 
 INY  
 STY *SAVE 
 RTS  
;
INC.ERRORS SED  
 CLC  
 LDA *ERRORS 
 ADC #1 
 STA *ERRORS 
 LDA *ERRORS+1 
 ADC #0 
 STA *ERRORS+1 
 CLD  
 RTS  
;
 .CT
ED.LINE JSR IN.F/L 
 BPL MONLOOP1.3 
 BCS MONLOOP1.3 
 JSR EF.C:T 
 JSR PR.CRT 
 JSR OUT.CR 
 JSR EL.START 
MONLOOP1.3 JMP MONLOOP1 
;
EL.START LDY #0 
EL.^F? JSR IN/SAVXY 
 CMP #$06 ;ACK? (^F) 
 BNE EL.DEL? 
 LDA #'> 
 JSR OUTCHAR 
 JSR IN/SAVXY 
 CMP #$06 ;ACK? (^F) 
 BEQ EL.^F? 
 STA CRTEX-2 
EL.NXTCH INY  
 CPY *SAVE 
 BCC EL.PRCH 
 BEQ EL.PRCH 
 RTS  
;
EL.PRCH LDA CRT-1,Y 
 PHA  
 JSR OUTCHAR 
 PLA  
 CMP CRTEX-2 
 BNE EL.NXTCH 
 BEQ EL.^F? 
;
EL.DEL? CMP #$08 ;BS? 
 BEQ EL.DEL 
 CMP #$7F ;DEL? 
 BNE EL.CR? 
 LDA #'\ 
 JSR OUTCHAR 
EL.DEL JSR ED.DELCH 
 JMP EL.^F? 
;
EL.CR? CMP #$0D ;CR? 
 BNE EL.^D? 
 JSR ED.CHNGELN 
EL.DONE BCC EL.RET 
 JSR OUT.CR 
EF.PRLIN JSR OUT.SP 
 JSR PR.SP/FRST 
 JSR OUT.2SP 
 LDY *SAVE 
 JSR PR.CRT 
EL.RET RTS  
;
EL.^D? CMP #$04 ;EOT? (^D) 
 BNE EL.INSERT 
 JSR OUT.CR 
 DEY  
 STY *SAVE 
 INY  
 JSR ED.MAX80 
 JMP EL.DONE 
;
EL.INSERT JSR ED.INSCH 
 INY  
 JMP EL.^F? 
;
ED.INSCH PHA  
 STY ADDRS+1 
 LDY *SAVE 
ED.UPW LDA CRT,Y 
 STA CRT+1,Y 
 DEY  
 BMI ED.<76? 
 CPY ADDRS+1 
 BCS ED.UPW 
ED.<76? PLA  
 INY  
 STA CRT,Y 
 CPY #76 
 BCC ED.INCEOL 
 DEY  
ED.INCEOL INC *SAVE 
 LDA *SAVE 
 CMP #76 
 BCC ED.I.RET 
 DEC *SAVE 
ED.I.RET RTS  
;
ED.DELCH DEY  
 BPL ED.SVCUR 
 INY  
ED.SVCUR TYA  
 PHA  
ED.DOWNW INY  
 LDA CRT,Y 
 STA CRT-1,Y 
 CPY *SAVE 
 BCC ED.DOWNW 
 DEC *SAVE 
 BPL ED.GTCUR 
 INC *SAVE 
ED.GTCUR PLA  
 TAY  
 RTS  
;
ED.CHNGELN LDY *SAVE 
ED.MAX80 INY  
 CPY #82
 BCC ED.TOTXT 
 LDY #81
ED.TOTXT STY ADDPAD 
 LDX #0 
 JSR FI.LN/DEL 
 LDY ADDPAD 
 CPY #2 
 BCC ED.C.RET 
 LDY #0 
 JSR INSRT.LN 
 SEC  
ED.C.RET RTS  
;
HA.LAYOUT JSR HARD.EXT 
 CMP #$0A ;LF? 
 BNE HA.RET 
 INC LINE_CNTR 
 LDA LINE_CNTR 
 CMP #4
 BEQ HA.36SP 
 CMP #70
 BNE HA.RET 
HA.SKTONXT LDA #$0A ;LF 
 JSR OUTCHAR 
HA.PAGE LDA LINE_CNTR 
 CMP #69
 BNE HA.TST4 
 LDA #$0A ;LF 
 BNE HA.LAYOUT 
HA.TST4 CMP #76
 BNE HA.SKTONXT 
 LDA #4
 STA LINE_CNTR 
HA.36SP LDA #36
 STA DELAY1 
HA.NXTSP JSR OUT.SP 
 DEC DELAY1 
 BNE HA.NXTSP 
 TYA  
 PHA  
 LDY #MES.PAGE-MES.ERROR 
 JSR MESSAGE 
 PLA  
 TAY  
 LDA PAGE_NUMB 
 PHA  
 JSR OUT.BYTE 
 PLA  
 SED  
 CLC  
 ADC #1 
 CLD  
 STA PAGE_NUMB 
 JSR OUT.CR 
 JSR OUT.CR 
HA.RET RTS  
;
@HARD JSR GET.CRT.UP 
 CMP #'P 
 BEQ HA.SKIPP 
 STX PRINT/CTL 
 CMP #'S 
 BNE HA.SE.PGNR 
HA.SET STX LINE_CNTR 
 INC PRINT/CTL 
HA.SE.PGNR JSR NXT.WORD 
 CPY #80 
 BCS MONLOOP1.4 
 LDX #PAGE_NUMB-TXST
 JSR GETDECPARM 
MONLOOP1.4 JMP MONLOOP1 
;
HA.SKIPP LDA PRINT/CTL 
 BEQ HA.SE.PGNR 
 TYA  
 PHA  
 JSR HA.PAGE 
 PLA  
 TAY  
 JMP HA.SE.PGNR 
;
@COPY JSR EX.COPY 
 JMP MON.LOOP 
;
EX.COPY JSR NXT.LETTER 
 LDX #FIRST-TXST
 JSR GETDECPARM 
 LDA FIRST 
 PHA  
 LDA FIRST+1 
 PHA  
 STY *SAVE 
 JSR FIND.LNGE 
 BPL C.DEST.FND 
 JSR NXT.LIN/LA 
C.DEST.FND LDA *SCRAT0 
 STA *SCRAT3 
 LDA *SCRAT0+1 
 STA *SCRAT4 
 LDY *SAVE 
 JSR NXT.LETTER 
 JSR IN.F/L 
 PHP  
 LDA LAST+1 
 CMP #$FF 
 BNE C.FROM? 
 JMP ERR.11 ;MISSING PARM
;
C.FROM? JSR SR12:SR0 
 PLP  
 BPL C.UNTIL? 
 JSR NXT.LIN/LA 
C.UNTIL? JSR FIRST:LAST 
 JSR FND.EOF? 
 BPL C.CALC.TPR 
 JSR NXT.LIN/LA 
C.CALC.TPR PLA  
 STA FIRST+1 
 PLA  
 STA FIRST 
 SEC  
 LDA *SCRAT0 
 SBC *SCRAT1 
 STA *PC 
 LDA *SCRAT0+1 
 SBC *SCRAT2 
 STA *PC+1 
 LDA *PC 
 CLC  
 ADC *TPRES 
 STA *REL 
 PHA  
 LDA *PC+1 
 ADC *TPRES+1 
 STA *REL+1 
 PHA  
 CMP TXEN+1 
 BEQ C.OVFLW? 
 BCC C.D<U? 
ERR.F.1 JMP ERR.F ;TEXT FILE OVRFLW 
;
C.OVFLW? LDA *REL 
 CMP TXEN 
 BCS ERR.F.1 ;TEXT FILE OVRFLW 
C.D<U? LDA *SCRAT4 
 CMP *SCRAT0+1 
 BEQ C.D<U?? 
 BCC C.D<F? 
 BCS C.MOVED? 
;
C.D<U?? LDA *SCRAT3 
 CMP *SCRAT0 
 BCS C.MOVED? 
C.D<F? LDA *SCRAT2 
 CMP *SCRAT4 
 BEQ C.D<F?? 
 BCC ERR.12.1 ;OUT OF RANGE 
 BCS C.ADJ.F/U 
;
C.D<F?? LDA *SCRAT1 
 CMP *SCRAT3 
 BCS C.ADJ.F/U 
ERR.12.1 JMP ERR.12 ;OUT OF RANGE
;
C.ADJ.F/U LDX #2 
C.ADJ.U CLC  
 LDA *SCRAT0,X 
 ADC *PC 
 STA *SCRAT0,X 
 LDA *SCRAT0+1,X 
 ADC *PC+1 
 STA *SCRAT0+1,X 
 DEX  
 DEX  
 BPL C.ADJ.U 
 LDX #0 
C.MOVEUP JSR DEC.TPRES 
 JSR DEC.REL 
 LDA (TPRES,X) 
 STA (REL,X) 
C.MOVED? LDA *SCRAT4 
 CMP *TPRES+1 
 BNE C.MOVEUP 
 LDA *SCRAT3 
 CMP *TPRES 
 BNE C.MOVEUP 
 LDA *SCRAT1 
 PHA  
 LDA *SCRAT2 
 PHA  
 LDA *SCRAT3 
 STA *PC 
 LDA *SCRAT4 
 STA *PC+1 
C.COPYED? LDA *SCRAT0 
 CMP *SCRAT1 
C.COPYED?? BNE C.COPY 
 LDA *SCRAT0+1 
 CMP *SCRAT2 
 BEQ C.COPYED 
C.COPY LDA (SCRAT1,X) 
 STA (SCRAT3,X) 
 JSR INC.SCR12 
 JSR INC.SCR34 
 JMP C.COPYED? 
;
C.COPYED PLA  
 STA *SCRAT2 
 PLA  
 STA *SCRAT1 
 PLA  
 STA *TPRES+1 
 PLA  
 STA *TPRES 
 JSR TXT.END.0 
 LDA *SCRAT0+1 
 PHA  
 LDA *SCRAT0 
 PHA  
 LDY #2 
 LDA (SCRAT3),Y 
 PHA  
 LDA #0 
 STA (SCRAT3),Y 
 STA LAST 
 STA LAST+1 
 LDA *PC 
 STA *SCRAT0 
 LDA *PC+1 
 STA *SCRAT0+1 
 LDA (SCRAT0),Y 
 BEQ C.DONE 
 JSR RENUMB 
C.DONE PLA  
 STA (SCRAT3),Y 
 PLA  
 STA *SCRAT0 
 PLA  
 STA *SCRAT0+1 
 RTS  
;
FIRST:LAST LDA LAST 
 STA FIRST 
 LDA LAST+1 
 STA FIRST+1 
 RTS  
;
 .CT
@MOVE JSR EX.COPY 
 JSR MOVEDOWN 
 JMP MON.LOOP 
;
@DELETE JSR NXT.LETTER 
 CPY #64
 BCC D.PARMS 
 JMP ERR.11 ;MISSING PARM
;
D.PARMS JSR IN.F/L 
 BEQ ERR.12.2 ;COMM SYNTX ERROR 
 PHP  
 JSR SR12:SR0 
 JSR FIRST:LAST 
 PLP  
 BPL D.UNTIL? 
 JSR NXT.LIN/LA 
D.UNTIL? JSR FND.EOF? 
 BPL D.DELETE 
 JSR NXT.LIN/LA 
D.DELETE JSR MOVEDOWN 
 JMP MON.LOOP 
;
ERR.12.2 JMP ERR.12 
;
@SET INC PASS 
 STX HEX/DEC 
NEWBOUNDS CPY #80 
 BCS PR.BOUNDS 
 TXA  
 PHA  
 LDX #0 
 JSR OPER/TST 
 PLA  
 TAX  
 LDA *PROC_ADDRS 
 STA TXST,X 
 INX  
 LDA *PROC_ADDRS+1 
 STA TXST,X 
 INX  
 JSR NXT.LETTER 
 CPX #8 
 BCC NEWBOUNDS 
 CPY #80 
 BCS PR.BOUNDS 
 LDX #0 
 JSR OPER/TST 
 LDA *PROC_ADDRS 
 STA *PURECL 
 LDA *PROC_ADDRS+1 
 STA *PURECH 
 JSR CLR.TXT/ST 
PR.BOUNDS LDX #0 
 JSR OUT.CR 
PR.B.TX/ST LDA TXST+1,X 
 JSR OUT.BYTE 
 LDA TXST,X 
 JSR OUT.BYTE 
 CPX #0 
 BNE PR.B.2SP 
PR.B._ LDA #'- 
 JSR OUTCHAR 
 JMP PR.B.PRES 
;
PR.B.2SP CPX #4 
 BEQ PR.B._ 
 JSR OUT.2SP 
PR.B.PRES INX  
 INX  
 CPX #8 
 BCC PR.B.TX/ST 
 LDA *PURECH 
 JSR OUT.BYTE 
 LDA *PURECL 
 JSR OUT.BYTE 
 JSR OUT.CR 
 LDA *TPRES+1 
 JSR OUT.BYTE 
 LDA *TPRES 
 JSR OUT.BYTE 
 JSR OUT.2SP 
 LDA *SPRES+1 
 JSR OUT.BYTE 
 LDA *SPRES 
 JSR OUT.BYTE 
 JSR OUT.CR 
 JMP MON.LOOP 
;
@DUPLCT JSR GET.FILNO 
DUPLCT STX FILE.NO 
 JSR G.CLEAR 
 LDA HFILE/NO 
 STA FILE.NO 
 CMP #$EE 
 BEQ MONLOOP.1 
 CMP LAST 
 BEQ MONLOOP.1 
 JSR HFL:TXTADS 
 JSR PUTIT 
 JMP DUPLCT 
;
MONLOOP.1 JMP MON.LOOP 
;
HFL:TXTADS LDX #1 
HFL.NXT LDA TXST,X 
 STA HSTART,X 
 LDA *TPRES,X 
 STA HEND,X 
 DEX  
 BPL HFL.NXT 
 INX  
 RTS  
;
@ENTER STX *DISCO 
 CPY #80 
 BCS ENTER 
 INC *DISCO 
ENTER JSR ENTER.1 
 JMP MON.LOOP 
;
ENTER.1 JMP (DISC1) 
;
@LOOKUP STX *DISCI 
 CPY #80 
 BCS LOOKUP 
 INC *DISCI 
LOOKUP JSR LOOKUP.1 
 JMP MON.LOOP 
;
LOOKUP.1 JMP (DISC2) 
;
@DISCCOM JSR DISCCOM 
 JMP MON.LOOP 
;
DISCCOM JMP (DISCC.VEC) 
;
PR/BRKTST JSR PRINT.TSTO 
 CMP #$0D ;CR? 
 NOP  
 BNE RET.P/B 
 NOP  
 JSR BRKTST
 BCC RET.P/B
 PHA
 NOP
 NOP
BROKEN JSR IN/TST.CHR
 CMP #$0F ;SI? (^O)
 BNE GOON?
 LDA #$0D ;CR
 NOP
 NOP
 NOP
 JSR JMPPRINT
 PLA
 RTS  
;
GOON? CMP #$11 ;DC1? (^Q) 
 BNE BROKEN
 PLA  
RET.P/B RTS  
;
PRINT.TSTO AND #%01111111
 PHA  
 LDA *SUPPRESS.O 
 BEQ TEST.CCHAR 
 PLA  
 RTS  
;
TEST.CCHAR PLA  
 PHA  
 CMP #$00 ;NUL? 
 BEQ NO^CCHAR 
 CMP #$1B ;ESC? 
 BEQ NO^CCHAR 
 CMP #$0D ;CR? 
 BEQ NO^CCHAR 
 CMP #$0A ;LF? 
 BEQ NO^CCHAR 
 CMP #$07 ;BEL? 
 BEQ NO^CCHAR 
 CMP #$08 ;BS? 
 BEQ NO^CCHAR 
 CMP #$20 ;SP? 
 BCS NO^CCHAR 
 PHA  
 LDA #'^ 
 JSR JMPPRINT 
 PLA  
 CLC  
 ADC #$40 
NO^CCHAR JSR JMPPRINT 
 PLA  
 RTS  
;
JMPPRINT JMP PRINT 
;
IN/TST.CHR LDA #0 
 STA *SUPPRESS.O 
IN.AGN JSR IN.CHAR 
 CMP #$00 ;NUL?
 BEQ IN.AGN 
 CMP #$1A ;SUB? (^Z) 
 BNE TST.^C 
 JMP MON.LOOP 
;
TST.^C CMP #$03 ;ETX? (^C) 
 BNE TST.^Y 
 JMP @BREAK 
;
TST.^Y CMP #$19 ;EM? (^Y) 
 BNE TST.CR 
EXIT0000 JMP NULVECTOR 
;
TST.CR CMP #$0D ;CR? 
 BNE TST.BEL 
 PHA  
 LDA #$0A ;LF 
 NOP
 NOP
 NOP
 PLA  
 NOP  
TST.BEL CMP #$07 ;BEL?
 BNE TST.^O 
 NOP  
 NOP  
 NOP  
TST.^O CMP #$0F ;SI? (^O) 
 BNE TST.^T 
 INC *SUPPRESS.O 
 RTS  
;
TST.^T CMP #$14 ;DC4? (^T) 
 BNE RET5 
 JSR IN.CHAR 
 CMP #'0 
 BEQ TD.0.TGGL 
 CMP #'1 
 BNE RET5 
 LDA PIA.PBD 
 EOR #%01000000
 STA PIA.PBD 
 JMP RET.CAN
;
TD.0.TGGL LDA PIA.PBD
 EOR #%00100000
 STA PIA.PBD
RET.CAN LDA #$18 ;CAN (^X) 
RET5 RTS  
;
IN.CHAR JSR INCHAR.EXT 
 AND #%01111111
 PHA  
 LDA TABSN 
 BNE ECHO 
 PLA  
 PHA  
 CMP #$11 ;DC1? (^Q) 
 BEQ NO.ECHO 
 CMP #$09 ;HT? 
 BEQ NO.ECHO 
ECHO PLA  
 JSR PRINT.TSTO 
 RTS  
;
NO.ECHO PLA  
 RTS  
;
IFPSEU? LDX #0 
 LDA CRT+3,Y 
 CMP #$20 
 BNE MACRO? 
 JSR SRCH.AT 
MACRO? LDA #1 
 STA *MAC.SRCH 
 JSR EV.LABEX 
 BCS M.FOUND? 
ILL.MNEM JSR ERR.2 ;ILLEGAL MNEMONIC 
 JMP AS.GOON 
;
M.FOUND? LDA *SYMBOLIC 
 BEQ ILL.MNEM 
 LDA CRT,Y 
 CMP #$20 
 BEQ M.DEFD? 
 JSR ERR.2 ;ILLEGAL MNEMONIC 
 JMP AS.GOON 
;
M.DEFD? LDA TOP+1 
 CMP ADDRS+1 
 BEQ M.DEFD?? 
 BCS M.PARMS? 
M.NOTDEFD LDX #$20 
 JSR ERR.0 ;MACRO EXP BEFORE DEF 
 JMP AS.GOON 
;
M.DEFD?? LDA TOP 
 CMP ADDRS 
 BCC M.NOTDEFD 
M.PARMS? LDA ADDRS+1 
 PHA  
 LDA ADDRS 
 PHA  
 STX *MAC.SRCH 
 STX CRTEX 
 JSR NXT.WORD 
 CPY #80 
 BCS M.CALLEXP 
 CMP #'; 
 BEQ M.CALLEXP 
 CMP #'( 
 BEQ M.PARMIN 
 JSR ERR.A ;ERR IN OR NO OPERAND 
 PLA  
 PLA  
 JMP AS.GOON 
;
M.PARMIN INY  
M.NXTPARM JSR NXT.LETTER 
 CPY #80 
 BCS M.CALLEXP 
 LDA CRT,Y 
 CMP #') 
 BEQ M.CALLEXP 
 TXA  
 PHA  
M.STPARM LDX #0 
 JSR GET.OPER 
 PLA  
 TAX  
 LDA *PROC_ADDRS 
 STA CRTEX+1,X 
 LDA *PROC_ADDRS+1 
 INX  
 STA CRTEX+1,X 
 INX  
 INC CRTEX 
 BNE M.NXTPARM 
M.CALLEXP LDX #0 
 PLA  
 STA *SCRAT0 
 PLA  
 STA *SCRAT0+1 
 PHA  
 LDA *SCRAT0 
 PHA  
 JSR PR.ASLIN 
 LDA #1 
 STA *CALL.EXP 
 INC *MAC.EXPAND 
 LDA *MAC.EXPAND 
 CMP #$20 
 BCC AS.LINE.1 
 LDX #$24 
 STX TERM 
 JMP ERR.0 ;TOO MANY NESTED MACROS 
;
AS.LINE.1 JMP AS.LINE 
;
SRCH.AT LDA CRT,Y 
 JSR UPPERCASE 
 CMP AT.COND,X 
 BNE SR.ATNXT 
 LDA CRT+1,Y 
 JSR UPPERCASE 
 CMP AT.COND+1,X 
 BNE SR.ATNXT 
 LDA CRT+2,Y 
 JSR UPPERCASE 
 CMP AT.COND+2,X 
 BNE SR.ATNXT 
 LDA AT.COND+3,X 
 STA *SCRAT3 
 LDA AT.COND+4,X 
 STA *SCRAT4 
 PLA  
 PLA  
 INY  
 INY  
 INY  
 LDX #0 
 JMP EX.PSEU 
;
SR.ATNXT INX  
 INX  
 INX  
 INX  
 INX  
 LDA AT.COND,X 
 BNE SRCH.AT 
 LDX #0 
 RTS  
;
AT.COND .BY 'IFE'
 .SI @IFE
 .BY 'IFN'
 .SI @IFN
 .BY 'IFP'
 .SI @IFP
 .BY 'IFM'
 .SI @IFM
 .BY 'SET'
 .SI @SETLABEL
AT.STARS .BY '***'
 .SI @STARS
 .BY '.EN'
 .SI @.EN
;
 .BY $00
;
AT.MEMDEN .BY '.ME'
 .SI @.ME/INP
 .BY '.MD'
 .SI ILL.NEST
 .BY '.EN'
 .SI @.EN
;
 .BY $00
;
AT.INDXY .BY ',X)'
 .SI IND.X
 .BY '),Y'
 .SI IND.Y
;
 .BY $00
;
AT.ZXY .BY ',X '
 .SI ZERO.X
 .BY ',Y '
 .SI ZERO.Y
;
 .BY $00
;
AT.AXY .BY ',X '
 .SI ABS.X
 .BY ',Y '
 .SI ABS.Y
;
 .BY $00
;
AT.LABL/H .BY '#L,'
 .SI IMM.LAB.L
 .BY '#H,'
 .SI IMM.LAB.H
;
 .BY $00
;
 .CT
@STARS STX *COND.SUP 
 JMP AS.GOON 
;
@.ME/INP STX *MAC.SUPPRS 
 JMP AS.GOON 
;
ILL.NEST LDX #$29 
 JSR ERR.0 ;ILL NESTED DEFINITION 
 JMP AS.GOON 
;
@IFE JSR IF.GETOPER 
 LDA *PROC_ADDRS 
 BNE AS.GOON.8 
 LDA *PROC_ADDRS+1 
 BNE AS.GOON.8 
IF.NOSUPR STX *COND.SUP 
AS.GOON.8 JMP AS.GOON 
;
@IFN JSR IF.GETOPER 
 LDA *PROC_ADDRS 
 BNE IF.NOSUPR 
 LDA *PROC_ADDRS+1 
 BEQ AS.GOON.8 
 BNE IF.NOSUPR 
;
@IFP JSR IF.GETOPER 
 LDA *PROC_ADDRS+1 
 BMI AS.GOON.9 
 STX *COND.SUP 
AS.GOON.9 JMP AS.GOON 
;
@IFM JSR IF.GETOPER 
 LDA *PROC_ADDRS+1 
 BPL AS.GOON.A 
 STX *COND.SUP 
AS.GOON.A JMP AS.GOON 
;
IF.GETOPER STY *COND.SUP 
IF/S.GET JSR NXT.LETTER 
 JSR OPER/TST 
 LDA ADDPAD 
 BEQ IF/S.GOT 
IF/S.ERR STY TERM 
 JSR ERR.4 ;OPERAND UNDEFINED 
IF/S.GOT RTS  
;
@.ES STY *LST.EXP.OB 
 JMP AS.GOON 
;
@.EC STX *LST.EXP.OB 
 JMP AS.GOON 
;
@SETLABEL JSR EV.LABEX 
 BCS SET.SYMB? 
 JMP IF/S.ERR 
;
SET.SYMB? LDA *SYMBOLIC 
 BNE SET.OPR? 
 LDX #$2A 
 JSR ERR.0 ;MUST BE SYBOLIC (SET) 
 JMP AS.GOON 
;
SET.OPR? JSR NXT.LETTER 
 LDA CRT,Y 
 CMP #'= 
 BEQ SETLABEL 
 JSR ERR.A ;NO OPERAND 
 JMP AS.GOON 
;
SETLABEL LDA *SCRAT0+1 
 PHA  
 LDA *SCRAT0 
 PHA  
 INY  
 JSR IF/S.GET 
 PLA  
 STA *SCRAT0 
 PLA  
 STA *SCRAT0+1 
 LDY #0 
 LDA *PROC_ADDRS 
 STA (SCRAT0),Y 
 LDA *PROC_ADDRS+1 
 INY  
 STA (SCRAT0),Y 
 JMP AS.GOON 
;
@.MD LDA *MAC.EXPAND 
 BEQ M.INPUT 
 LDA *CALL.EXP 
 BNE M.EXPAND 
 LDX #$29 
 JSR ERR.0 ;ILL NESTED DEFINITION 
 JMP AS.GOON 
;
M.INPUT INC *MAC.SUPPRS 
 LDA PASS 
 BNE AS.GOON.B 
 LDY #0 
 PLA  
 STA (SCRAT0),Y 
 PLA  
 PHA  
 INY  
 STA (SCRAT0),Y 
 DEY  
 LDA (SCRAT0),Y 
 PHA  
AS.GOON.B JMP AS.GOON 
;
M.EXPAND INC *MAC.SEQ 
 BNE EXP.PARMS? 
 INC *MAC.SEQ+1 
 BNE EXP.PARMS? 
 LDX #$2E 
 JSR ERR.0 ;MAC # OVRFLW 
EXP.PARMS? STX *CALL.EXP 
 STX *MAC.SRCH 
 LDA CRTEX 
 BEQ EXP.NOPARM 
 LDA CRT,Y 
 CMP #'( 
 BEQ EXP.FETCH 
EXP.PRMERR LDX #$25 
 JSR ERR.0 ;MACRO PARM MISMATCH 
EX.ME.1 JMP EX.ME 
;
EXP.FETCH STX *SAVEX 
 INY  
EXP.NXTPRM JSR NXT.LETTER 
 CMP #'; 
 BEQ EXP.ALL? 
 CPY #80 
 BCS EXP.ALL? 
 CMP #') 
 BEQ EXP.ALL? 
 STY *SAVEY 
 JSR EV.LABEX 
 BCS EXP.ACTUAL 
 LDY *SAVEY 
 JSR NEWLABEL 
 BCS EX.ME.1 
EXP.ACTUAL STY *SAVEY 
 LDY #0 
 LDX *SAVEX 
 LDA CRTEX+1,X 
 STA (SCRAT0),Y 
 INX  
 LDA CRTEX+1,X 
 INX  
 INY  
 STA (SCRAT0),Y 
 LDY *SAVEY 
 STX *SAVEX 
 LDX #0 
 DEC CRTEX 
 BMI EXP.PRMERR 
 JSR COMP.. 
 JMP EXP.NXTPRM 
;
EXP.ALL? LDA CRTEX 
 BNE EXP.PRMERR 
AS.GOON.C JMP AS.GOON 
;
EXP.NOPARM LDA CRT,Y 
 CMP #'; 
 BEQ AS.GOON.C 
 CPY #80 
 BCS AS.GOON.C 
 BCC EXP.PRMERR 
;
@.ME LDA *MAC.EXPAND 
 BNE EX.ME 
 STX *MAC.SUPPRS 
 JMP AS.GOON 
;
EX.ME STX *LN.2B.OUT 
 DEC *MAC.EXPAND 
 BMI NO.MD.ER 
 BEQ M.RETURN 
 DEC *MAC.SEQ 
 LDA *MAC.SEQ 
 CMP #0-1
 BNE M.RETURN 
 DEC *MAC.SEQ+1 
M.RETURN PLA  
 PLA  
 JMP AS.GOON 
;
NO.MD.ER STX *MAC.EXPAND 
 LDX #$2B 
 JSR ERR.0 ;.ME WITHOUT ASS .MD 
 JMP AS.GOON 
;
BRKTST BIT PIA.PAD 
 CLC  
 BMI BRK.RET 
BRKEND BIT PIA.PAD 
 BPL BRKEND 
 NOP
 NOP
 NOP
 SEC  
BRK.RET RTS  
;
WAIT PHA  
  PHA  
 SBC #1 
 BNE WAIT+2 
 PLA  
 SBC #1 
 BNE WAIT+1 
 PLA  
 SBC #1 
 BNE WAIT 
 RTS  
;
LOADER LDA *DISCI 
 BEQ TAPE.LOAD 
 JSR DISC.LOAD 
 RTS  
;
DISC.LOAD JMP (DISCI.VEC) 
;
TAPE.LOAD JMP LOAD.EXT 
;
INIT NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP  
 NOP  
 NOP  
 NOP  
 NOP  
 NOP  
 RTS  
;
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
 BRK  
;
SAVER LDA *DISCO 
 BEQ TAPE.SAVE 
 JSR DISC.SAVE 
 RTS  
;
DISC.SAVE JMP (DISCO.VEC) 
;
TAPE.SAVE JMP SAVE.EXT 
;
WAIT/LF LDA #31
 JSR WAIT 
 LDA #$0A ;LF 
 JSR PRINT 
 LDA #30
 JSR WAIT 
 NOP  
 NOP  
 RTS  
;
PRINT PHA  
 NOP  
 NOP  
 NOP  
 NOP  
 NOP  
 JSR PRCHAR.EXT 
 PLA  
 CMP #$0D ;CR? 
 BEQ WAIT/LF 
 RTS  
;
 .EN




       |   0   |   1   |   2   |   3   |   4   |   5   |   6   |   7   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    0  |  brk  |  ora  |       |       |  tsb  |  ora  |  asl  |  rmb  | 
       |  imp  | (z,x) |       |       |   z   |   z   |   z   |   0   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    1  |  bpl  |  ora  |  ora  |       |  trb  |  ora  |  asl  |  rmb  | 
       |  rel  | (z),y |  (z)  |       |   z   |  z,x  |  z,y  |   1   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    2  |  jsr  |  and  |       |       |  bit  |  and  |  rol  |  rmb  | 
       |  abs  | (z,x) |       |       |   z   |   z   |   z   |   2   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    3  |  bmi  |  and  |  and  |       |  bit  |  and  |  rol  |  rmb  | 
       |  rel  | (z),y |  (z)  |       |  z,x  |  z,x  |  z,y  |   3   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    4  |  rti  |  eor  |       |       |  eor  |  eor  |  eor  |  rmb  | 
       |  imp  | (z,x) |       |       |   z   |   z   |   z   |   4   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    5  |  bvc  |  eor  |  eor  |       |       |  eor  |  lsr  |  rmb  | 
       |  rel  | (z),y |  (z)  |       |       |  z,x  |  z,x  |   5   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    6  |  rts  |  adc  |       |       |  stz  |  adc  |  ror  |  rmb  | 
       |  imp  | (z,x) |       |       |   z   |   z   |   z   |   6   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    7  |  bvs  |  adc  |  adc  |       |  stz  |  adc  |  ror  |  rmb  | 
       |  rel  | (z),y |  (z)  |       |  z,x  |  z,x  |  z,x  |   7   |  
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    8  |  bra  |  sta  |       |       |  sty  |  sta  |  stx  |  smb  | 
       |  rel  | (z,x) |       |       |   z   |   z   |   z   |   0   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    9  |  bcc  |  sta  |  sta  |       |  sty  |  sta  |  stx  |  smb  | 
       |  rel  | (z),y |  (z)  |       |  z,x  |  z,x  |  z,y  |   1   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    a  |  ldy  |  ldy  |  ldx  |       |  ldy  |  lda  |  ldx  |  smb  | 
       |  imm  | (z,x) |  imm  |       |   z   |   z   |   z   |   2   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    b  |  bcs  |  lda  |  lda  |       |  ldy  |  lda  |  ldx  |  smb  | 
       |  rel  | (z),y |  (z)  |       |  z,x  |  z,x  |  z,y  |   3   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    c  |  cpy  |  cpy  |       |       |  cpy  |  cmp  |  dec  |  smb  | 
       |  imm  | (z,x) |       |       |   z   |   z   |   z   |   4   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    d  |  bne  |  cmp  |  cmp  |       |       |  cmp  |  dec  |  smb  | 
       |  rel  | (z),y |  (z)  |       |       |  z,x  |  z,x  |   5   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    e  |  cpx  |  sbc  |       |       |  cpx  |  sbc  |  inc  |  smb  | 
       |  imm  | (z,x) |       |       |   z   |   z   |   z   |   6   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    f  |  beq  |  sbc  |  sbc  |       |       |  sbc  |  inc  |  smb  | 
       |  rel  | (z),y |  (z)  |       |       |  z,x  |  z,x  |   7   |  
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 














       |   8   |   9   |   a   |   b   |   c   |   d   |   e   |   f   |
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    0  |  php  |  ora  |  asl  |       |  tsb  |  ora  |  asl  |  bbr  | 
       |  imp  |  imm  |   a   |       |  abs  |  abs  |  abs  |   0   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    1  |  clc  |  ora  |  inc  |       |  trb  |  ora  |  asl  |  bbr  | 
       |  imp  | abs,y |   a   |       |  abs  | abs,x | abs,x |   1   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    2  |  plp  |  and  |  rol  |       |  bit  |  and  |  rol  |  bbr  | 
       |  imp  |  imm  |   a   |       |  abs  |  abs  |  abs  |   2   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    3  |  sec  |  and  |  dec  |       |  bit  |  and  |  rol  |  bbr  | 
       |  imp  | abs,y |   a   |       | abs,x | abs,x | abs,x |   3   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    4  |  pha  |  eor  |  lsr  |       |  jmp  |  eor  |  lsr  |  bbr  | 
       |  imp  |  imm  |   a   |       |  abs  |  abs  |  abs  |   4   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    5  |  cli  |  eor  |  phy  |       |       |  eor  |  lsr  |  bbr  | 
       |  imp  | abs,y |  imp  |       |       | abs,x | abs,x |   5   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    6  |  pla  |  adc  |  ror  |       |  jmp  |  adc  |  ror  |  bbr  | 
       |  imp  |  imm  |   a   |       | (abs) |  abs  |  abs  |   6   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    7  |  sei  |  adc  |  ply  |       |  jmp  |  adc  |  ror  |  bbr  | 
       |  imp  | abs,y |  imp  |       | (a,x) | abs,x | abs,x |   7   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    8  |  dey  |  bit  |  txa  |       |  sty  |  sta  |  stx  |  bbs  | 
       |  imp  |  imm  |  imp  |       |  abs  |  abs  |  abs  |   0   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    9  |  tya  |  sta  |  txs  |       |  stz  |  sta  |  stz  |  bbs  | 
       |  imp  | abs,y |  imp  |       |  abs  | abs,x | abs,x |   1   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    a  |  tay  |  lda  |  tax  |       |  ldy  |  lda  |  ldx  |  bbs  | 
       |  imp  |  imm  |  imp  |       |  abs  |  abs  |  abs  |   2   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    b  |  clv  |  lda  |  tsx  |       |  ldy  |  lda  |  ldx  |  bbs  | 
       |  imp  | abs,x |  imp  |       | abs,x | abs,x | abs,y |   3   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    c  |  iny  |  cmp  |  dex  |       |  cpy  |  cmp  |  dec  |  bbs  | 
       |  imp  |  imm  |  imp  |       |  abs  |  abs  |  abs  |   4   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    d  |  cld  |  cmp  |  phx  |       |       |  cmp  |  dec  |  bbs  | 
       |  imp  | abs,y |  imp  |       |       |  abs  |  abs  |   5   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    e  |  inx  |  sbc  |  nop  |       |  cpx  |  sbc  |  inc  |  bbs  | 
       |  imp  |  imm  |   -   |       |  abs  |  abs  |  abs  |   6   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    f  |  sed  |  sbc  |  plx  |       |       |  sbc  |  inc  |  bbs  | 
       |  imp  | abs,y |  imp  |       |       | abs,x | abs,x |   7   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 




       |   0   |   1   |   2   |   3   |   4   |   5   |   6   |   7   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    0  |  brk  |  ora  |       |       |C tsb  |  ora  |  asl  |R rmb  | 
       |  imp  | (z,x) |       |       |   z   |   z   |   z   |   0   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    1  |  bpl  |  ora  |C ora  |       |C trb  |  ora  |  asl  |R rmb  | 
       |  rel  | (z),y |  (z)  |       |   z   |  z,x  |  z,y  |   1   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    2  |  jsr  |  and  |       |       |  bit  |  and  |  rol  |R rmb  | 
       |  abs  | (z,x) |       |       |   z   |   z   |   z   |   2   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    3  |  bmi  |  and  |C and  |       |C bit  |  and  |  rol  |R rmb  | 
       |  rel  | (z),y |  (z)  |       |  z,x  |  z,x  |  z,y  |   3   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    4  |  rti  |  eor  |       |       |  eor  |  eor  |  eor  |R rmb  | 
       |  imp  | (z,x) |       |       |   z   |   z   |   z   |   4   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    5  |  bvc  |  eor  |C eor  |       |       |  eor  |  lsr  |R rmb  | 
       |  rel  | (z),y |  (z)  |       |       |  z,x  |  z,x  |   5   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    6  |  rts  |  adc  |       |       |C stz  |  adc  |  ror  |R rmb  | 
       |  imp  | (z,x) |       |       |   z   |   z   |   z   |   6   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    7  |  bvs  |  adc  |C adc  |       |C stz  |  adc  |  ror  |R rmb  | 
       |  rel  | (z),y |  (z)  |       |  z,x  |  z,x  |  z,x  |   7   |  
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    8  |C bra  |  sta  |       |       |  sty  |  sta  |  stx  |R smb  | 
       |  rel  | (z,x) |       |       |   z   |   z   |   z   |   0   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    9  |  bcc  |  sta  |C sta  |       |  sty  |  sta  |  stx  |R smb  | 
       |  rel  | (z),y |  (z)  |       |  z,x  |  z,x  |  z,y  |   1   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    a  |  ldy  |  ldy  |  ldx  |       |  ldy  |  lda  |  ldx  |R smb  | 
       |  imm  | (z,x) |  imm  |       |   z   |   z   |   z   |   2   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    b  |  bcs  |  lda  |C lda  |       |  ldy  |  lda  |  ldx  |R smb  | 
       |  rel  | (z),y |  (z)  |       |  z,x  |  z,x  |  z,y  |   3   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    c  |  cpy  |  cpy  |       |       |  cpy  |  cmp  |  dec  |R smb  | 
       |  imm  | (z,x) |       |       |   z   |   z   |   z   |   4   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    d  |  bne  |  cmp  |C cmp  |       |       |  cmp  |  dec  |R smb  | 
       |  rel  | (z),y |  (z)  |       |       |  z,x  |  z,x  |   5   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    e  |  cpx  |  sbc  |       |       |  cpx  |  sbc  |  inc  |R smb  | 
       |  imm  | (z,x) |       |       |   z   |   z   |   z   |   6   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    f  |  beq  |  sbc  |C sbc  |       |       |  sbc  |  inc  |R smb  | 
       |  rel  | (z),y |  (z)  |       |       |  z,x  |  z,x  |   7   |  
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 














       |   8   |   9   |   a   |   b   |   c   |   d   |   e   |   f   |
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    0  |  php  |  ora  |  asl  |       |C tsb  |  ora  |  asl  |R bbr  | 
       |  imp  |  imm  |   a   |       |  abs  |  abs  |  abs  |   0   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    1  |  clc  |  ora  |C inc  |       |C trb  |  ora  |  asl  |R bbr  | 
       |  imp  | abs,y |   a   |       |  abs  | abs,x | abs,x |   1   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    2  |  plp  |  and  |  rol  |       |  bit  |  and  |  rol  |R bbr  | 
       |  imp  |  imm  |   a   |       |  abs  |  abs  |  abs  |   2   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    3  |  sec  |  and  |C dec  |       |C bit  |  and  |  rol  |R bbr  | 
       |  imp  | abs,y |   a   |       | abs,x | abs,x | abs,x |   3   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    4  |  pha  |  eor  |  lsr  |       |  jmp  |  eor  |  lsr  |R bbr  | 
       |  imp  |  imm  |   a   |       |  abs  |  abs  |  abs  |   4   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    5  |  cli  |  eor  |C phy  |       |       |  eor  |  lsr  |R bbr  | 
       |  imp  | abs,y |  imp  |       |       | abs,x | abs,x |   5   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    6  |  pla  |  adc  |  ror  |       |  jmp  |  adc  |  ror  |R bbr  | 
       |  imp  |  imm  |   a   |       | (abs) |  abs  |  abs  |   6   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    7  |  sei  |  adc  |C ply  |       |C jmp  |  adc  |  ror  |R bbr  | 
       |  imp  | abs,y |  imp  |       | (a,x) | abs,x | abs,x |   7   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    8  |  dey  |C bit  |  txa  |       |  sty  |  sta  |  stx  |R bbs  | 
       |  imp  |  imm  |  imp  |       |  abs  |  abs  |  abs  |   0   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    9  |  tya  |  sta  |  txs  |       |C stz  |  sta  |C stz  |R bbs  | 
       |  imp  | abs,y |  imp  |       |  abs  | abs,x | abs,x |   1   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    a  |  tay  |  lda  |  tax  |       |  ldy  |  lda  |  ldx  |R bbs  | 
       |  imp  |  imm  |  imp  |       |  abs  |  abs  |  abs  |   2   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    b  |  clv  |  lda  |  tsx  |       |  ldy  |  lda  |  ldx  |R bbs  | 
       |  imp  | abs,x |  imp  |       | abs,x | abs,x | abs,y |   3   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    c  |  iny  |  cmp  |  dex  |       |  cpy  |  cmp  |  dec  |R bbs  | 
       |  imp  |  imm  |  imp  |       |  abs  |  abs  |  abs  |   4   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    d  |  cld  |  cmp  |C phx  |       |       |  cmp  |  dec  |R bbs  | 
       |  imp  | abs,y |  imp  |       |       |  abs  |  abs  |   5   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    e  |  inx  |  sbc  |  nop  |       |  cpx  |  sbc  |  inc  |R bbs  | 
       |  imp  |  imm  |   -   |       |  abs  |  abs  |  abs  |   6   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
    f  |  sed  |  sbc  |C plx  |       |       |  sbc  |  inc  |R bbs  | 
       |  imp  | abs,y |  imp  |       |       | abs,x | abs,x |   7   | 
   ----|-------|-------|-------|-------|-------|-------|-------|-------| 
